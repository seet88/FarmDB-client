{"version":3,"sources":["components/templates/TemplateFieldBox.module.css","components/templates/TemplateFields.module.css","components/fieldTypes/CImage.module.css","hooks/useField.js","components/library/LibrariesList.module.css","components/templates/LinkToLibraryField.module.css","components/buttons/GoBack.module.css","components/library/ShortEntryView.js","components/library/Header.js","components/library/LibraryHeader.js","components/library/EntriesList.js","components/fieldTypes/CInt.js","components/fieldTypes/CFloat.js","components/fieldTypes/CString.js","components/fieldTypes/CImage.js","components/fieldTypes/CDate.js","components/fieldTypes/CDateTime.js","utils/utilsFunction.js","components/fieldTypes/CBarcode.js","components/fieldTypes/CAudio.js","components/fieldTypes/CCheckbox.js","components/fieldTypes/CDropDownList.js","components/library/ModalEntriesList.js","components/fieldTypes/LinkToEntry.js","components/library/EntryViewHeader.js","components/library/EntryEditHeader.js","API/graphQLTypes.js","components/fieldTypes/CScript.js","store/configuration-slice.js","components/library/SingleEntryPage.js","components/buttons/LibraryTileOptions.js","components/library/LibraryTile.js","components/library/LibrariesList.js","components/templates/LinkToLibraryField.js","components/templates/SelectField.js","components/templates/TemplateFieldCreator.js","components/templates/TemplateFieldBox.js","components/templates/TemplateFields.js","components/buttons/GoBack.js","components/templates/TemplateLibraryCreator.js","UI/HeaderMenuOptions.js","UI/MainTopHeader.js","components/configuration/Configuration.js","App.js","reportWebVitals.js","store/librariesRecords-slice.js","store/store.js","store/browser-store.js","style/customTheme.js","index.js","API/config.js","store/editedEntry-slice.js","store/librariesData-slice.js","store/templateLibraries-slice.js","components/templates/TemplateLibraryCreator.module.css","components/templates/TemplateFieldCreator.module.css","components/templates/SelectField.module.css"],"names":["module","exports","useField","searchedFieldName","console","log","field","useSelector","state","selectFieldByName","type","value","useLinkToEntryField","link_libUUID","entryLinks","length","libUUID","listRowsUUID","forEach","entry","push","rowUUID","templateColumns","selectLibraryById","rowsData","getRowsDataByIds","useScriptField","columnTemplate","options","script","getFieldValue","fieldName","this","columns","find","column","name","toLowerCase","sqlFieldName","map","row","fieldLink","fieldType","scriptValue","ScriptResult","status","error","useLinkToEntryField_t","scriptJSON","scriptObject","JSON","parse","expr","scriptCode","replaceAll","code","includes","lastLine","split","reverse","line","trim","join","evalCode","eval","e","SyntaxError","message","ShortEntryView","mode","content","ListItemButton","ListItemText","primary","fe_title","secondary","fe_description","Box","to","pathname","Header","props","history","useHistory","sx","flexGrow","AppBar","position","Toolbar","IconButton","size","edge","color","mr","onClick","goBack","Typography","variant","component","title","children","LibraryHeader","library","EntriesList","parentColumnUUID","clickEntryLinkHandler","lacation","useLocation","dispatch","useDispatch","libData","getLibDataByLibraryId","libTemplate","clickBoxHandler","columnParentName","col","columnUUID","link","newUUID","uuidv4","sqlTableName","addNewEntryLink","CustomBox","clickHandler","List","width","bgcolor","subheader","ListSubheader","id","backgroundColor","rows","Divider","CInt","isEdit","TextField","columnName","label","focused","disabled","defaultValue","onBlur","data","target","checked","updateFieldValue","mx","CFloat","CString","multiline","maxRows","CImage","useState","showCamera","setShowCamera","String","images","setImages","className","classes","list","src","idx","alt","newImages","splice","deleteImageHandler","isImageMirror","idealFacingMode","FACING_MODES","ENVIRONMENT","onTakePhoto","dataUri","handleTakePhoto","CDate","dateString","Date","toISOString","replace","CDateTime","undefined","isNotEmpty","checkIfValueIsDate","setValue","useEffect","stringify","saveDataHandler","LocalizationProvider","dateAdapter","AdapterDateFns","DateTimePicker","renderInput","onChange","newValue","CBarcode","CAudio","addresses","controls","CCheckbox","isDisabled","isChecked","FormControlLabel","control","Checkbox","inputProps","labelPlacement","CDropDownList","selectOptions","index","Select","selectedIndex","option","MenuItem","style","top","left","transform","maxHeight","border","boxShadow","overflow","ModalEntriesList","toggleShowModal","LinkToEntry","showModal","setShowModal","isLinkListOpen","setIsLinkListOpen","toggleShowModalHandler","document","body","dictionaryLibraryUUID","libName","dictionaryLibraryName","isEditMode","ExpandLess","ExpandMore","Collapse","in","timeout","unmountOnExit","disablePadding","entryLink","ListItem","pl","secondaryAction","event","entryIndex","preventDefault","deleteEntryLink","rowTitle","ListItemIcon","Modal","open","onClose","EntryViewHeader","setMode","isDeleteAlertOpen","setIsDeleteAlertOpen","closeDeleteAlertHandler","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","deleteRowData","autoFocus","EntryEditHeader","actionButtonHandler","cancelHandler","saveHandler","setIsSnackbarOpen","GET_LIBRARIES_TEMPLATES","gql","GET_LIBRARIES_DATA_PG","UPDATE_LIBRARY_ROWS_PG","ADD_LIBRARY_ROWS_PG","ADD_LIBRARY_TEMPLATE_PG","UPDATE_LIBRARY_TEMPLATE_PG","CScript","configurationSlice","createSlice","initialState","conf","storageType","reducers","updateConfiguration","action","payload","actions","selectConfiguration","configuration","setComponentByType","SingleEntryPage","location","entryViewConfigJson","localStorage","getItem","isSnackbarOpen","useMutation","updateEntryInPG","addEntryInPG","columnsTemplates","getRowDataById","fieldsInit","fieldValue","order","entrylinks","updateEntryValues","clearState","setItem","prepareDataForSendToPG","updatedEntry","savedRowUUID","getValue","hasOwnProperty","tableName","uuid","tableParentName","rowParentUUID","rowJSON","sendInsertedDataToDatabase","variables","libraryData","sendUpdatedDataToDatabase","insertedEntry","fields","selectAllFields","snackbarCloseHandle","reason","editedEntry","editedFields","addNewLibraryRecord","updateLibraryRecord","Grid","container","spacing","item","xs","m","Snackbar","autoHideDuration","Alert","severity","LibraryTileOptions","closeMenu","deleteLibraryData","deleteLibraryTemplate","LibraryTile","anchorEl","setAnchorEl","isMenuOpened","Boolean","handleCloseMenu","Card","maxWidth","CardHeader","avatar","CardMedia","image","currentTarget","Menu","anchorOrigin","vertical","horizontal","transformOrigin","CardContent","entriesCount","lastModification","CardActions","disableSpacing","ml","LibrariesList","libraries","librariesTemplate","lib","LinkToLibraryField","setOptions","defaultOptions","librariesInfo","selectLibrariesInfo","getOptionValue","chosenLibrary","setChosenLibrary","applyOptions","main","SelectField","points","setPoints","showAddModal","setShowAddModal","pointName","setPointName","isDefault","setIsDefault","ul","point","default","newPointsList","removePointFromListHandler","modal","header","newPoints","htmlFor","defaultChecked","backdrop","getScriptCode","jsonString","TemplateFieldCreator","saveFieldConfigHandler","cancelModal","fieldConfigTemplate","fieldConfigForUpdate","fieldConfig","availableFieldTypes","availableFieldViewOptions","getFieldType","fieldConfigInit","usage","setFieldConfig","setFieldType","fieldOptions","setFieldOptions","setInputValueHandler","prevFieldConfig","element","fieldConfigTmp","availableType","form","hintField","defaultValueField","TemplateFieldBox","editField","box","leftSide","description","TemplateFields","saveFieldsConfigHandler","fieldsConfig","setFieldsConfig","editFieldHandler","foundField","addButton","prev","foundFieldIdx","findIndex","newFieldsConfig","GoBack","clearEntryStore","TemplateLibraryCreator","libConfig","setLibConfig","showPanel","setShowPanel","insertTemplateInPG","updateTemplateInPG","isUpdate","templateLibSelected","buttonActive","active","libConfigTmp","prepareSqlFieldName","addNewLibraryTemplate","addNewLibraryData","libraryTemplate","tab","tabButton","mainOptions","HeaderMenuOptions","MainTopHeader","anchorElement","setAnchorElement","handleClose","keepMounted","Configuration","config","setStorageType","onSubmit","configForSave","display","flexDirection","FormControl","InputLabel","labelId","autoWidth","App","useQuery","loadingDataPg","loading","errorDataPg","dataPg","configJson","templatesJson","updateAllLibraries","dataJson","updateAllLibrariesDataFromStorage","librariesTemplates","updateAllLibrariesData","librariesDataPG","exact","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","librariesRecordsSlice","items","test","updateAllLibrariesRecords","oldState","libIndex","rowIndex","store","configureStore","reducer","librariesTemplateSlice","librariesRecords","editedEntrySlice","librariesData","librariesDataSlice","BrowserStore","selectAllDataLibrary","templateLibraries","selectAllLibraries","customTheme","createTheme","palette","dark","grey","light","lighter","yellow","client","ApolloClient","uri","cache","InMemoryCache","addTypename","ReactDOM","StrictMode","ApolloProvider","ThemeProvider","theme","getElementById","valueIn","fieldIndex","columnsFromJSON","libTemp","newRow","titleColumnsValues","descriptionColumnsValues","filter","templateLibIdx"],"mappings":"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","file":"static/js/main.24e78a1e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"TemplateFieldBox_box__J2Qkg\",\"leftSide\":\"TemplateFieldBox_leftSide__3m42l\",\"description\":\"TemplateFieldBox_description__1xdap\",\"libName\":\"TemplateFieldBox_libName__1z6TS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ul\":\"TemplateFields_ul__2K5_A\",\"addButton\":\"TemplateFields_addButton__1u_7n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"CImage_list__2otOE\"};","import { useSelector } from \"react-redux\";\nimport { selectFieldByName } from \"../store/editedEntry-slice\";\nimport { getRowsDataByIds } from \"../store/librariesData-slice\";\nimport { selectLibraryById } from \"../store/templateLibraries-slice\";\n\nconst useField = (searchedFieldName) => {\n  console.log(\"aaa\");\n  // const fields = useSelector((state) => selectAllFields(state));\n  // const field = fields.find(\n  //   (field) => field.name.toLowerCase() === searchedFieldName.toLowerCase()\n  //   );\n  const field = useSelector((state) =>\n    selectFieldByName(state, searchedFieldName)\n  );\n  if (field?.type !== \"libEntry\") {\n    return field?.field?.value;\n  }\n};\n\nexport const useLinkToEntryField = (searchedFieldName) => {\n  const field = useSelector((state) =>\n    selectFieldByName(state, searchedFieldName)\n  );\n\n  let link_libUUID;\n  if (field?.field?.entryLinks && field?.field?.entryLinks?.length > 0) {\n    console.log(\"field?.field?.entryLinks\", field?.field?.entryLinks);\n    link_libUUID = field?.field?.entryLinks[0]?.libUUID;\n  }\n  const listRowsUUID = [];\n  field?.field?.entryLinks?.forEach((entry) => {\n    listRowsUUID.push(entry.rowUUID);\n  });\n  const templateColumns = useSelector((state) =>\n    selectLibraryById(state, link_libUUID)\n  );\n\n  const rowsData = useSelector((state) =>\n    getRowsDataByIds(state, { libUUID: link_libUUID, listRowsUUID })\n  );\n\n  const { value } = useScriptField(\n    field?.columnTemplate?.options[0]?.script,\n    field?.type\n  );\n  if (field?.type === \"script\") return value;\n  if (field?.type !== \"libEntry\") return field?.field?.value;\n\n  function getFieldValue(fieldName) {\n    const sqlFieldName = templateColumns.columns.find(\n      (column) => column.name.toLowerCase() === fieldName.toLowerCase()\n    )?.sqlFieldName;\n    // console.log(\"sqlFieldName in fieldLink Entry:\", sqlFieldName, fieldName);\n    // console.log(\"templateColumns.columns:\", templateColumns.columns);\n    return this[sqlFieldName];\n  }\n\n  return (\n    rowsData?.map((row) => {\n      const entry = {\n        ...row,\n      };\n      entry.fieldLink = getFieldValue;\n      return entry;\n    }) || []\n  );\n};\n\nexport const useScriptField = (script, fieldType) => {\n  let scriptValue;\n  const ScriptResult = {\n    status: \"InProgress\",\n    value: null,\n    error: null,\n  };\n  if (fieldType !== \"script\") return ScriptResult;\n  // console.log(\"columnTemplate.name\", columnTemplate.name);\n  //   if (mode === \"view\") return <div>{field?.value}</div>;\n  //   return null;\n  // eslint-disable-next-line\n  const useLinkToEntryField_t = (searchedFieldName) => {\n    return useLinkToEntryField(searchedFieldName);\n  };\n  let scriptJSON = script;\n\n  const scriptObject = JSON.parse(scriptJSON);\n  console.log(\"scriptObject.expr\", scriptObject.expr);\n  let scriptCode = scriptObject.expr;\n  scriptCode = scriptCode.replaceAll(\"].field(\", \"]?.fieldLink(\");\n  scriptCode = scriptCode.replaceAll(\"field(\", \" useLinkToEntryField_t(\");\n  scriptCode = scriptCode.replaceAll(\"srd(\", \" return(\");\n  scriptCode = scriptCode.replaceAll(\"src\", \" \");\n  const code = [];\n  if (!scriptCode.includes(\"return\")) {\n    let lastLine = true;\n    scriptCode\n      .split(\"\\n\")\n      .reverse()\n      .forEach((line) => {\n        if (line.trim().length > 3) {\n          if (lastLine) code.push(` return ${line}`);\n          else code.push(line);\n          lastLine = false;\n        }\n      });\n    console.log(\"code\", code);\n    console.log(\"code joined\", code.reverse().join(\"\\n\"));\n    scriptCode = code.reverse().join(\"\\n\");\n    // scriptCode = replaceLast(\"\\n\", \"\\n return \", scriptCode);\n  }\n  console.log(\"before eval\", scriptCode);\n\n  const evalCode = `\nconst functionScript = () => {\n  ${scriptCode}\n  return 'Ups no return'\n};\n// console.log(functionScript());\nscriptValue = functionScript();\n\n`;\n\n  try {\n    // eslint-disable-next-line\n    eval(evalCode);\n    ScriptResult.value = scriptValue;\n    ScriptResult.status = \"success\";\n  } catch (e) {\n    ScriptResult.error = e;\n    ScriptResult.status = \"error\";\n    if (e instanceof SyntaxError) {\n      console.error(e.message);\n    }\n  }\n\n  return ScriptResult;\n};\n\nexport default useField;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"LibrariesList_list__d57me\",\"item\":\"LibrariesList_item__e7j7n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"LinkToLibraryField_main__2O8Lh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"goBack\":\"GoBack_goBack__gYX2-\"};","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { ListItemButton, ListItemText } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\n\nconst ShortEntryView = ({ entry, mode, libUUID }) => {\n  const content = (\n    <ListItemButton>\n      <ListItemText primary={entry.fe_title} secondary={entry.fe_description} />\n    </ListItemButton>\n  );\n  if (mode === \"linking\") return <Box>{content}</Box>;\n  else\n    return (\n      <Link\n        to={{\n          pathname: \"/library/entry\",\n          state: {\n            libUUID: libUUID,\n            rowUUID: entry?.rowUUID,\n            mode: \"view\",\n          },\n        }}\n      >\n        {content}\n      </Link>\n    );\n};\n\nexport default ShortEntryView;\n","import React from \"react\";\nimport { Box } from \"@mui/system\";\nimport { AppBar, IconButton, Toolbar, Typography } from \"@mui/material\";\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\nimport HomeIcon from \"@mui/icons-material/Home\";\nimport { useHistory } from \"react-router\";\n\nconst Header = (props) => {\n  const history = useHistory();\n\n  const handlerHomeClick = () => {\n    history.push(\"/\");\n  };\n  const handleGoBackClick = () => {\n    history.goBack();\n  };\n\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          {props.mode !== \"empty\" && (\n            <>\n              <IconButton\n                size=\"large\"\n                edge=\"start\"\n                color=\"inherit\"\n                aria-label=\"menu\"\n                sx={{ mr: 2 }}\n                onClick={handleGoBackClick}\n              >\n                <ArrowBackIcon />\n              </IconButton>\n              <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n                {props.title}\n              </Typography>\n\n              <IconButton\n                size=\"large\"\n                edge=\"end\"\n                color=\"inherit\"\n                aria-label=\"home\"\n                sx={{ mr: 2 }}\n                onClick={handlerHomeClick}\n              >\n                <HomeIcon />\n              </IconButton>\n            </>\n          )}\n          {props.children}\n        </Toolbar>\n      </AppBar>\n    </Box>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport Header from \"./Header\";\n\nconst LibraryHeader = ({ library, mode }) => {\n  const { name } = library;\n\n  return <Header title={name}></Header>;\n};\n\nexport default LibraryHeader;\n","import React from \"react\";\nimport ShortEntryView from \"./ShortEntryView\";\n// import classes from \"./EntriesList.module.css\";\nimport { useSelector } from \"react-redux\";\nimport { selectLibraryById } from \"../../store/templateLibraries-slice\";\nimport { addNewEntryLink } from \"../../store/editedEntry-slice\";\nimport LibraryHeader from \"./LibraryHeader\";\nimport { useLocation } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { getLibDataByLibraryId } from \"../../store/librariesData-slice\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport {\n  Divider,\n  IconButton,\n  List,\n  ListItemButton,\n  ListItemText,\n  ListSubheader,\n  Typography,\n} from \"@mui/material\";\nimport Header from \"./Header\";\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\n\nconst EntriesList = ({\n  libUUID,\n  mode,\n  parentColumnUUID,\n  clickEntryLinkHandler,\n}) => {\n  const lacation = useLocation();\n  if (mode !== \"linking\") libUUID = lacation?.state?.libUUID;\n  console.log(\"libUUID\", libUUID);\n  const dispatch = useDispatch();\n  // return <div>{state}</div>;\n  /*\n  const getColumnsValueByColumnName = (columns, descriptionColumn) => {\n    let descriptionValue;\n\n    columns.forEach((column) => {\n      if (\n        String(column.columnName).toUpperCase() ===\n        String(descriptionColumn?.name).toUpperCase()\n      )\n        if (descriptionColumn.type === \"libEntry\") {\n          descriptionValue = column?.entryLinks\n            ?.map((link) => link.uniqueName)\n            ?.join(\", \");\n        } else descriptionValue = column.value;\n    });\n\n    return { descriptionValue };\n  };\n\n  const calcEntries = (rows, descriptionColumn) => {\n    const entries = [];\n\n    rows.forEach((row) => {\n      const { descriptionValue } = getColumnsValueByColumnName(\n        row.columns,\n        descriptionColumn\n      );\n\n      entries.push({\n        title: row.uniqueName,\n        description: descriptionValue,\n        rowUUID: row.rowUUID,\n        libUUID,\n      });\n    });\n\n    return entries;\n  };\n*/\n  const libData = useSelector((state) => getLibDataByLibraryId(state, libUUID));\n  const library = {\n    name: libData?.name,\n  };\n  /*\n  const { columns } = useSelector((state) => selectLibraryById(state, libUUID));\n\n  // const titleColumn = columns.find((column) => column.usage === \"title\")?.name;\n  const descriptionColumn = columns.find(\n    (column) => column.usage === \"description\"\n  );\n\n  const libraryTemplate = useSelector((state) =>\n    state.librariesTemplate?.find((lib) => lib.libUUID === libUUID)\n  );\n  const library = {\n    name: libraryTemplate?.name,\n  };\n  */\n  /*\n  let entriesList = calcEntries(rows, descriptionColumn);\n\n  useEffect(() => {\n    entriesList = calcEntries(rows, descriptionColumn);\n  }, [rows, descriptionColumn]);\n*/\n\n  const libTemplate = useSelector((state) => selectLibraryById(state, libUUID));\n  const clickBoxHandler = (entry) => {\n    if (mode === \"linking\") {\n      console.log(\"entry\", entry);\n      const columnParentName = libTemplate.columns.find(\n        (col) => col.columnUUID === parentColumnUUID\n      )?.sqlFieldName;\n      const link = {\n        ...entry,\n        parentColumnUUID,\n        newUUID: uuidv4(),\n        libUUID,\n        sqlTableName: libTemplate.sqlTableName,\n        columnParentName,\n      };\n      dispatch(addNewEntryLink(link));\n      clickEntryLinkHandler();\n    }\n  };\n  const CustomBox = ({ entry, children, clickHandler }) => {\n    return <div onClick={() => clickHandler(entry)}>{children}</div>;\n  };\n  console.log(\"libData\", libData);\n\n  return (\n    <>\n      {mode !== \"linking\" && <LibraryHeader library={library} mode={mode} />}\n      {mode === \"linking\" && (\n        <Header mode=\"empty\">\n          <IconButton\n            size=\"large\"\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"goBack\"\n            sx={{ mr: 2 }}\n            onClick={clickEntryLinkHandler}\n          >\n            <ArrowBackIcon />\n          </IconButton>\n          <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n            {library.name}\n          </Typography>\n        </Header>\n      )}\n      <List\n        sx={{ width: \"100%\", bgcolor: \"primary\" }}\n        component=\"nav\"\n        aria-labelledby=\"nested-list-subheader\"\n        subheader={\n          <ListSubheader\n            component=\"div\"\n            id=\"nested-list-subheader\"\n            sx={{ backgroundColor: \"primary.light\" }}\n          >\n            Entries List Items:\n          </ListSubheader>\n        }\n      >\n        {!libData?.rows.length > 0 && (\n          <ListItemButton>\n            <ListItemText primary=\"No entry yet\" />\n          </ListItemButton>\n        )}\n\n        {libData?.rows.map((entry) => (\n          <>\n            <CustomBox\n              key={entry.rowUUID}\n              entry={entry}\n              clickHandler={clickBoxHandler}\n            >\n              <ShortEntryView\n                entry={entry}\n                libUUID={libData.libUUID}\n                mode={mode}\n              />\n            </CustomBox>\n            <Divider />\n          </>\n        ))}\n      </List>\n    </>\n  );\n};\n\nexport default EntriesList;\n","import { TextField } from \"@mui/material\";\nimport { useDispatch } from \"react-redux\";\nimport { updateFieldValue } from \"../../store/editedEntry-slice\";\nimport { Typography } from \"@mui/material\";\n\nconst CInt = ({ field, mode }) => {\n  const dispatch = useDispatch();\n  const saveDataHandler = (e) => {\n    const data = {\n      columnUUID: field.columnUUID,\n      type: e.target.type,\n      checked: e.target.checked,\n      value: e.target.value,\n    };\n    dispatch(updateFieldValue(data));\n  };\n\n  // const [value, setValue] = useState(Number(field?.value));\n\n  // useEffect(() => {\n  //   if (mode !== \"view\") setValue(Number(field?.value));\n  // }, [mode]);\n\n  // const increaseNumberHandler = () => {\n  //   let e = {};\n  //   e.target = {};\n  //   e.target.id = field.columnUUID;\n  //   e.target.value = value + 1;\n  //   saveDataHandler(e);\n  //   setValue(value + 1);\n  // };\n  // const decreaseNumberHandler = () => {\n  //   let e = {};\n  //   e.target = {};\n  //   e.target.id = field.columnUUID;\n  //   e.target.value = value - 1;\n  //   saveDataHandler(e);\n  //   setValue(value - 1);\n  // };\n  // const inputNumberChangeHandler = (e) => {\n  //   setValue(Number(e.target.value));\n  //   saveDataHandler(e);\n  // };\n  const isEdit = mode === \"view\" ? false : true;\n\n  return (\n    <TextField\n      id={field.columnUUID}\n      name={field.columnName}\n      label={\n        <Typography variant=\"headline\" component=\"h2\" color=\"black\">\n          {field.columnName}\n        </Typography>\n      }\n      focused\n      disabled={!isEdit}\n      type=\"number\"\n      defaultValue={field?.value}\n      onBlur={saveDataHandler}\n      sx={{ backgroundColor: isEdit ? \"primary.lighter\" : \"default\", mx: 2 }}\n    />\n  );\n};\nexport default CInt;\n","import CInt from \"./CInt\";\n\nconst CFloat = ({ field, mode }) => {\n  return <CInt field={field} mode={mode} />;\n};\nexport default CFloat;\n","import { TextField } from \"@mui/material\";\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { updateFieldValue } from \"../../store/editedEntry-slice\";\nimport { Typography } from \"@mui/material\";\n\nconst CString = ({ field, mode }) => {\n  const dispatch = useDispatch();\n  const saveDataHandler = (e) => {\n    const data = {\n      columnUUID: field.columnUUID,\n      type: e.target.type,\n      checked: e.target.checked,\n      value: e.target.value,\n    };\n    dispatch(updateFieldValue(data));\n  };\n\n  const isEdit = mode === \"view\" ? false : true;\n\n  return (\n    <TextField\n      id={field.columnUUID}\n      name={field.columnName}\n      label={\n        <Typography variant=\"headline\" component=\"h2\" color=\"black\">\n          {field.columnName}\n        </Typography>\n      }\n      multiline\n      focused\n      maxRows={14}\n      disabled={!isEdit}\n      defaultValue={field?.value}\n      onBlur={saveDataHandler}\n      sx={{\n        backgroundColor: isEdit ? \"primary.lighter\" : \"default\",\n        width: \"95%\",\n        mx: 2,\n      }}\n    />\n  );\n};\n\nexport default CString;\n","import React, { Fragment, useState } from \"react\";\nimport { Camera, FACING_MODES } from \"react-html5-camera-photo\";\nimport \"react-html5-camera-photo/build/css/index.css\";\nimport classes from \"./CImage.module.css\";\n\nconst CImage = ({ field, mode }) => {\n  const [showCamera, setShowCamera] = useState(false);\n  const [images, setImages] = useState(String(field.value).split(\"\\n\"));\n\n  const handleTakePhoto = (dataUri) => {\n    console.log(\"takePhoto\", dataUri);\n    setImages([...images, dataUri]);\n    setShowCamera(false);\n  };\n  const deleteImageHandler = (idx) => {\n    const newImages = [...images];\n    newImages.splice(idx, 1);\n    setImages(newImages);\n  };\n\n  if (mode === \"edit\")\n    return (\n      <ul className={classes.list}>\n        {images.map(\n          (src, idx) =>\n            src.length > 5 && (\n              <li key={idx}>\n                <img src={src} alt=\"Wrong path\" width={325}></img>\n                <button onClick={() => deleteImageHandler(idx)}>X</button>\n              </li>\n            )\n        )}\n\n        {showCamera && (\n          <li key={9998}>\n            <Camera\n              isImageMirror={false}\n              idealFacingMode={FACING_MODES.ENVIRONMENT}\n              onTakePhoto={(dataUri) => {\n                handleTakePhoto(dataUri);\n              }}\n            />\n          </li>\n        )}\n        {!showCamera && (\n          <li key={9999}>\n            <button\n              onClick={() => {\n                setShowCamera(true);\n              }}\n            >\n              Camera\n            </button>\n            <button>Store</button>\n          </li>\n        )}\n      </ul>\n    );\n  if (!field?.value) return <div></div>;\n  return (\n    <Fragment>\n      {mode === \"view\" &&\n        images.map((src, idx) => (\n          <img src={src} alt=\"Wrong path\" width={325} key={idx}></img>\n        ))}\n    </Fragment>\n  );\n};\n\nexport default CImage;\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { updateFieldValue } from \"../../store/editedEntry-slice\";\n\nconst CDate = ({ field, mode }) => {\n  const dispatch = useDispatch();\n  const saveDataHandler = (e) => {\n    const data = {\n      columnUUID: field.columnUUID,\n      type: e.target.type,\n      checked: e.target.checked,\n      value: e.target.value,\n    };\n    console.log(\"data\", data);\n    dispatch(updateFieldValue(data));\n  };\n\n  if (!field?.value) return <div></div>;\n  console.log(\"field?.value\", field?.value);\n  const date = new Date(field?.value);\n  const dateString = date.toISOString().replace(\"T\", \" \").split(\" \")[0];\n  console.log(\"dateString\", dateString);\n  if (mode === \"view\") return <div>{dateString}</div>;\n  else\n    return (\n      <input\n        type=\"date\"\n        id={field.columnUUID}\n        name={field.columnName}\n        onBlur={saveDataHandler}\n        defaultValue={dateString}\n      ></input>\n    );\n};\n\nexport default CDate;\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { updateFieldValue } from \"../../store/editedEntry-slice\";\nimport TextField from \"@mui/material/TextField\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport LocalizationProvider from \"@mui/lab/LocalizationProvider\";\nimport DateTimePicker from \"@mui/lab/DateTimePicker\";\nimport { Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { isNotEmpty } from \"../../utils/utilsFunction\";\n\nconst checkIfValueIsDate = (value) => {\n  if (isNotEmpty(value)) return true;\n  else return false;\n};\n\nconst CDateTime = ({ field, mode }) => {\n  console.log(\"value of date\", JSON.parse(field?.value), field?.value);\n  const [value, setValue] = useState(\n    checkIfValueIsDate(field?.value) ? new Date(JSON.parse(field?.value)) : null\n  );\n  const dispatch = useDispatch();\n  const saveDataHandler = () => {\n    console.log(\" saveDataHandler value of date\", JSON.stringify(value), value);\n    const data = {\n      columnUUID: field.columnUUID,\n      type: \"dateTime\",\n      checked: \"\",\n      value: JSON.stringify(value),\n    };\n    dispatch(updateFieldValue(data));\n    console.log(\"here saveDataHandler\");\n  };\n\n  useEffect(() => {\n    saveDataHandler();\n    // eslint-disable-next-line\n  }, [value]);\n  const isEdit = mode === \"view\" ? false : true;\n\n  console.log(\"field?.value\", field?.value);\n  return (\n    <Box sx={{ mx: 2 }}>\n      <LocalizationProvider dateAdapter={AdapterDateFns}>\n        <DateTimePicker\n          renderInput={(props) => <TextField {...props} />}\n          value={value}\n          label={\n            <Typography variant=\"headline\" component=\"h2\" color=\"black\">\n              {field.columnName}\n            </Typography>\n          }\n          disabled={!isEdit}\n          onChange={(newValue) => setValue(newValue)}\n        />\n      </LocalizationProvider>\n    </Box>\n  );\n};\n\nexport default CDateTime;\n","export function isNotEmpty(value) {\n  if (!value) return false;\n  if (value === \"\") return false;\n  if (value === false) return false;\n  if (value === null) return false;\n  if (value === undefined) return false;\n  if (value === \"null\") return false;\n  value = value + \" \"; // check for a bunch of whitespace\n  if (value.replace(/^\\s\\s*/, \"\").replace(/\\s\\s*$/, \"\") === \"\") return false;\n  return true;\n}\n","import React from \"react\";\n\nconst CBarcode = ({ value }) => {\n  return <div>{value}</div>;\n};\n\nexport default CBarcode;\n","import React, { Fragment } from \"react\";\n\nconst CAudio = ({ field }) => {\n  if (!field?.value) return <div></div>;\n  const addresses = String(field.value).split(\"\\n\");\n  return (\n    <Fragment>\n      {addresses.map((src, idx) => (\n        <audio controls key={idx}>\n          <source src={src} type=\"audio/ogg\" />\n        </audio>\n      ))}\n    </Fragment>\n  );\n};\n\nexport default CAudio;\n","import { Checkbox, FormControlLabel, Typography } from \"@mui/material\";\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { updateFieldValue } from \"../../store/editedEntry-slice\";\n\nconst CCheckbox = ({ field, mode }) => {\n  const dispatch = useDispatch();\n  const saveDataHandler = (e) => {\n    const data = {\n      columnUUID: field.columnUUID,\n      type: e.target.type,\n      checked: e.target.checked,\n      value: e.target.value,\n    };\n    dispatch(updateFieldValue(data));\n  };\n\n  console.log(\"values\", field?.value);\n  const isDisabled = mode === \"view\" ? true : false;\n  const isChecked = field?.value === \"1\" ? true : false;\n  return (\n    <FormControlLabel\n      value=\"start\"\n      control={\n        <Checkbox\n          id={field.columnUUID}\n          name={field.columnName}\n          checked={isChecked}\n          onChange={saveDataHandler}\n          disabled={isDisabled}\n          sx={{ backgroundColor: isDisabled ? \"default\" : \"primary.lighter\" }}\n          inputProps={{ \"aria-label\": \"controlled\" }}\n        />\n      }\n      label={\n        <Typography variant=\"headline\" component=\"h3\" color=\"black\">\n          {field.columnName}\n        </Typography>\n      }\n      labelPlacement=\"top\"\n    />\n  );\n};\n\nexport default CCheckbox;\n","import { FormControlLabel, MenuItem, Select, Typography } from \"@mui/material\";\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { updateFieldValue } from \"../../store/editedEntry-slice\";\n\nconst CDropDownList = ({ field, mode, options }) => {\n  const dispatch = useDispatch();\n  const saveDataHandler = (e) => {\n    const data = {\n      columnUUID: field.columnUUID,\n      type: e.target.type,\n      checked: e.target.checked,\n      value: e.target.value,\n    };\n    console.log(\"e\", e);\n    console.log(\"e.target\", e.target);\n    console.log(\"e.target.value\", e.target.value);\n    console.log(\"e.target.selectedIndex\", e.target.selectedIndex);\n    dispatch(updateFieldValue(data));\n  };\n  const selectOptions = [\n    ...options,\n    { value: \"\", index: options?.length + 1 || 1 },\n  ];\n  const isDisabled = mode === \"view\" ? true : false;\n  // const selectedValue = options?.find(\n  //   (option) => option.index === Number(field?.value)\n  // )?.value;\n\n  return (\n    <FormControlLabel\n      value=\"start\"\n      control={\n        <Select\n          id={field.columnUUID}\n          name={field.columnName}\n          disabled={isDisabled}\n          value={field?.value || \"\"}\n          sx={{ backgroundColor: isDisabled ? \"default\" : \"primary.lighter\" }}\n          onChange={saveDataHandler}\n          label=\"aga\"\n        >\n          {selectOptions?.map((option) => (\n            <MenuItem value={option.value} key={option.index}>\n              {option.value}\n            </MenuItem>\n          ))}\n        </Select>\n      }\n      label={\n        <Typography variant=\"headline\" component=\"h3\" color=\"black\">\n          {field.columnName}\n        </Typography>\n      }\n      labelPlacement=\"top\"\n    />\n  );\n};\n\nexport default CDropDownList;\n","import { Box } from \"@mui/system\";\nimport React from \"react\";\nimport EntriesList from \"./EntriesList\";\n\nconst style = {\n  position: \"fixed\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: 400,\n  maxHeight: 700,\n  bgcolor: \"primary.lighter\",\n  border: \"2px solid #000\",\n  boxShadow: 24,\n\n  overflow: \"auto\",\n};\n\nconst ModalEntriesList = ({ toggleShowModal, libUUID, columnUUID }) => {\n  console.log(\"modal:\", libUUID, \"columnUUID\", columnUUID);\n\n  return (\n    <Box sx={style}>\n      <EntriesList\n        libUUID={libUUID}\n        mode=\"linking\"\n        parentColumnUUID={columnUUID}\n        clickEntryLinkHandler={toggleShowModal}\n      ></EntriesList>\n    </Box>\n  );\n};\n\nexport default ModalEntriesList;\n","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport ModalEntriesList from \"../library/ModalEntriesList\";\nimport { useDispatch } from \"react-redux\";\nimport { deleteEntryLink } from \"../../store/editedEntry-slice\";\nimport {\n  Collapse,\n  Divider,\n  IconButton,\n  List,\n  ListItem,\n  ListItemButton,\n  ListItemIcon,\n  ListItemText,\n  Modal,\n} from \"@mui/material\";\nimport { ExpandLess, ExpandMore } from \"@mui/icons-material\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport { Box } from \"@mui/system\";\n\nconst LinkToEntry = ({ field, mode, columnTemplate }) => {\n  // const { libUUID, uniqueName } = entryLinks;\n  // console.log(\"columnTemplate in LinkToEntry\", columnTemplate);\n  const dispatch = useDispatch();\n  const [showModal, setShowModal] = useState(false);\n  const [isLinkListOpen, setIsLinkListOpen] = useState(true);\n  const listLinkOpenHandler = () => {\n    setIsLinkListOpen(!isLinkListOpen);\n  };\n\n  const toggleShowModalHandler = () => {\n    setShowModal(!showModal);\n  };\n\n  const deleteHandler = (e, entryIndex) => {\n    console.log(\"delete link handler\", entryIndex);\n    e.preventDefault();\n    dispatch(deleteEntryLink({ columnUUID: field?.columnUUID, entryIndex }));\n  };\n\n  useEffect(() => {\n    if (showModal) {\n      document.body.style.overflow = \"hidden\";\n    } else {\n      document.body.style.overflow = \"unset\";\n    }\n  }, [showModal]);\n\n  let libUUID;\n  libUUID = columnTemplate?.options[0]?.dictionaryLibraryUUID;\n  const libName = columnTemplate?.options[0]?.dictionaryLibraryName;\n  const isEditMode = mode === \"edit\" || mode === \"addNewEntry\" ? true : false;\n\n  return (\n    <>\n      <ListItemButton onClick={listLinkOpenHandler}>\n        <ListItemText primary={libName} secondary=\"Link to entry\" />\n        {isLinkListOpen ? <ExpandLess /> : <ExpandMore />}\n      </ListItemButton>\n      <Divider />\n      <Collapse in={isLinkListOpen} timeout=\"auto\" unmountOnExit>\n        <List component=\"div\" disablePadding>\n          {field.entryLinks?.map((entryLink, idx) => (\n            <Box key={idx}>\n              <Link\n                to={{\n                  pathname: \"/library/entry\",\n                  state: {\n                    libUUID: entryLink?.libUUID,\n                    rowUUID: entryLink?.rowUUID,\n                    mode: \"view\",\n                  },\n                }}\n              >\n                <ListItem\n                  sx={{ pl: 6 }}\n                  secondaryAction={\n                    isEditMode && (\n                      <IconButton\n                        edge=\"end\"\n                        aria-label=\"delete\"\n                        onClick={(event) => deleteHandler(event, idx)}\n                      >\n                        <DeleteIcon />\n                      </IconButton>\n                    )\n                  }\n                >\n                  <ListItemText primary={entryLink?.rowTitle} />\n                </ListItem>\n              </Link>\n              <Divider variant=\"inset\" component=\"li\" />\n            </Box>\n          ))}\n          {isEditMode && (\n            <ListItemButton sx={{ pl: 6 }} onClick={toggleShowModalHandler}>\n              <ListItemIcon>\n                <AddIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"Add from list\" />\n            </ListItemButton>\n          )}\n        </List>\n      </Collapse>\n      <Modal\n        open={showModal}\n        onClose={() => setShowModal(showModal)}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\"\n      >\n        <Box>\n          <ModalEntriesList\n            toggleShowModal={toggleShowModalHandler}\n            libUUID={libUUID}\n            columnUUID={field?.columnUUID}\n          ></ModalEntriesList>\n        </Box>\n      </Modal>\n    </>\n    // <div>\n    //   <ul className={classes.list}>\n    //     {field.entryLinks?.map((entryLink, idx) => (\n    //       <li className={classes.item} key={idx}>\n    //         {/* <Link to={`/library/${entry?.libraryId}/entry/${entry?.id}`}> */}\n    //         <Link\n    //           to={{\n    //             pathname: \"/library/entry\",\n    //             state: {\n    //               libUUID: entryLink?.libUUID,\n    //               rowUUID: entryLink?.rowUUID,\n    //               mode: \"view\",\n    //             },\n    //           }}\n    //           // className={classes.link}\n    //         >\n    //           <div className={classes.link}>\n    //             <div className={classes.name}>{entryLink?.rowTitle}</div>\n    //             {(mode === \"edit\" || mode === \"addNewEntry\") && (\n    //               <button\n    //                 className={classes.delete}\n    //                 onClick={(event) => deleteHandler(event, idx)}\n    //               >\n    //                 X\n    //               </button>\n    //             )}\n    //           </div>\n    //         </Link>\n    //       </li>\n    //     ))}\n    //   </ul>\n    //   {(mode === \"edit\" || mode === \"addNewEntry\") && (\n    //     <button\n    //       className={classes.viewEntryList}\n    //       onClick={toggleShowModalHandler}\n    //     >\n    //       Add from list\n    //     </button>\n    //   )}\n    //   {showModal && (\n    //     <ModalEntriesList\n    //       toggleShowModal={toggleShowModalHandler}\n    //       libUUID={libUUID}\n    //       columnUUID={field?.columnUUID}\n    //     ></ModalEntriesList>\n    //   )}\n    // </div>\n  );\n};\n\nexport default LinkToEntry;\n","import {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  IconButton,\n} from \"@mui/material\";\nimport EditIcon from \"@mui/icons-material/Edit\";\n// import MoreVertIcon from \"@mui/icons-material/MoreVert\";\nimport Header from \"./Header\";\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { deleteRowData } from \"../../store/librariesData-slice\";\nimport { useHistory } from \"react-router\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\n// import GoBack from \"../buttons/GoBack\";\n// import classes from \"./EntryViewHeader.module.css\";\n\nconst EntryViewHeader = ({ entry, setMode }) => {\n  const [isDeleteAlertOpen, setIsDeleteAlertOpen] = useState(false);\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const editHandler = () => {\n    setMode(\"edit\");\n  };\n  const openDeleteRowAlertHandler = (e) => {\n    e.preventDefault();\n    setIsDeleteAlertOpen(true);\n  };\n  const closeDeleteAlertHandler = (e) => {\n    e.preventDefault();\n    setIsDeleteAlertOpen(false);\n  };\n\n  const deleteRowHandler = (e) => {\n    e.preventDefault();\n    dispatch(\n      deleteRowData({ libUUID: entry?.libUUID, rowUUID: entry?.rowUUID })\n    );\n\n    history.goBack();\n  };\n\n  return (\n    <Header title={entry?.title}>\n      <IconButton\n        size=\"large\"\n        edge=\"end\"\n        color=\"inherit\"\n        aria-label=\"edit\"\n        sx={{ mr: 1 }}\n        onClick={editHandler}\n      >\n        <EditIcon />\n      </IconButton>\n\n      <IconButton\n        size=\"large\"\n        edge=\"end\"\n        color=\"inherit\"\n        aria-label=\"menu\"\n        sx={{ mr: 1 }}\n        onClick={openDeleteRowAlertHandler}\n      >\n        <DeleteIcon />\n      </IconButton>\n\n      <Dialog\n        open={isDeleteAlertOpen}\n        onClose={closeDeleteAlertHandler}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{\"Are you sure?\"}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            Do you want delete this row data? This can't be undone.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={closeDeleteAlertHandler}>Disagree</Button>\n          <Button onClick={deleteRowHandler} autoFocus>\n            Agree\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Header>\n  );\n};\n\nexport default EntryViewHeader;\n","import { IconButton, Typography } from \"@mui/material\";\nimport React from \"react\";\nimport Header from \"./Header\";\nimport DoneIcon from \"@mui/icons-material/Done\";\nimport ClearIcon from \"@mui/icons-material/Clear\";\n\nconst EntryEditHeader = ({ setMode, actionButtonHandler }) => {\n  const { cancelHandler, saveHandler, setIsSnackbarOpen } = actionButtonHandler;\n  const cancelButtonHandler = () => {\n    setMode(\"view\");\n    cancelHandler();\n  };\n\n  const saveButtonHandler = () => {\n    setMode(\"view\");\n    saveHandler();\n    setIsSnackbarOpen(true);\n  };\n\n  return (\n    <Header mode=\"empty\">\n      <IconButton\n        size=\"large\"\n        edge=\"start\"\n        color=\"inherit\"\n        aria-label=\"save\"\n        sx={{ mr: 2 }}\n        onClick={saveButtonHandler}\n      >\n        <DoneIcon />\n      </IconButton>\n      <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n        Edit\n      </Typography>\n      <IconButton\n        size=\"large\"\n        edge=\"end\"\n        color=\"inherit\"\n        aria-label=\"cancel\"\n        sx={{ mr: 2 }}\n        onClick={cancelButtonHandler}\n      >\n        <ClearIcon />\n      </IconButton>\n    </Header>\n    // <div className={classes.header}>\n    //   <button onClick={saveButtonHandler} className={classes.save}>\n    //     &#10003;\n    //   </button>\n    //   <div>Edit entry</div>\n    //   <button onClick={cancelButtonHandler} className={classes.cancel}>\n    //     Cancel\n    //   </button>\n    // </div>\n  );\n};\n\nexport default EntryEditHeader;\n","import { gql } from \"@apollo/client\";\nexport const GET_LIBRARIES_TEMPLATES = gql`\n  query {\n    librariesTemplates {\n      name\n      id\n      libUUID\n      sqlTableName\n      columns {\n        type\n        name\n        order\n        description\n        defaultValue\n        columnUUID\n        usage\n        sqlFieldName\n        sqlFieldType\n        options {\n          value\n          index\n          default\n          dictionaryLibraryUUID\n          dictionaryLibraryName\n          script\n        }\n      }\n    }\n  }\n`;\n\nexport const GET_LIBRARIES_DATA = gql`\n  query {\n    librariesData {\n      name\n      id\n      libUUID\n      rows {\n        rowUUID\n        uniqueName\n        creationDate\n        modificationDate\n        columns {\n          value\n          columnName\n          columnUUID\n          entryLinks {\n            libUUID\n            uniqueName\n            rowUUID\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport const GET_LIBRARIES_DATA_PG = gql`\n  query {\n    librariesDataPG {\n      name\n      id\n      libUUID\n      rows {\n        rowUUID\n        fe_title\n        fe_description\n        rowJSON\n      }\n    }\n  }\n`;\n\nexport const UPDATE_LIBRARY_ROWS_PG = gql`\n  mutation updateLibraryRowsData($libraryData: LibraryDataInput) {\n    updateLibraryRowsData(libraryDataInput: $libraryData)\n  }\n`;\n\nexport const ADD_LIBRARY_ROWS_PG = gql`\n  mutation addLibraryRowsData($libraryData: LibraryDataInput) {\n    addLibraryRowsData(libraryDataInput: $libraryData)\n  }\n`;\n\nexport const ADD_LIBRARY_TEMPLATE_PG = gql`\n  mutation addLibraryTemplate($libraryTemplate: LibraryTemplateInput) {\n    addLibraryTemplate(libraryTemplateInput: $libraryTemplate)\n  }\n`;\nexport const UPDATE_LIBRARY_TEMPLATE_PG = gql`\n  mutation updateLibraryTemplate($libraryTemplate: LibraryTemplateInput) {\n    updateLibraryTemplate(libraryTemplateInput: $libraryTemplate)\n  }\n`;\n","import { useScriptField } from \"../../hooks/useField\";\n\nconst CScript = ({ mode, field, columnTemplate }) => {\n  console.log(\"In script\");\n  const { status, value, error } = useScriptField(\n    columnTemplate?.options[0]?.script,\n    columnTemplate?.type\n  );\n  // console.log(func());\n\n  if (status === \"success\") return <div>{value}</div>;\n  else return <div> {error} </div>;\n};\n\nexport default CScript;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  conf: {\n    storageType: \"localStorage\",\n  },\n};\n\nexport const configurationSlice = createSlice({\n  name: \"configuration\",\n  initialState,\n  reducers: {\n    updateConfiguration(state, action) {\n      state.conf = action.payload;\n    },\n  },\n});\n\nexport const { updateConfiguration } = configurationSlice.actions;\n\nexport default configurationSlice.reducer;\n\nexport const selectConfiguration = (state) => state.configuration.conf;\n","import React, { Fragment, useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport { selectLibraryById } from \"../../store/templateLibraries-slice\";\nimport {\n  updateEntryValues,\n  selectAllFields,\n  clearState,\n} from \"../../store/editedEntry-slice\";\nimport CFloat from \"../fieldTypes/CFloat\";\nimport CInt from \"../fieldTypes/CInt\";\nimport CString from \"../fieldTypes/CString\";\nimport CImage from \"../fieldTypes/CImage\";\nimport CDate from \"../fieldTypes/CDate\";\nimport CDateTime from \"../fieldTypes/CDateTime\";\nimport CBarcode from \"../fieldTypes/CBarcode\";\nimport CAudio from \"../fieldTypes/CAudio\";\nimport CCheckbox from \"../fieldTypes/CCheckbox\";\nimport CDropDownList from \"../fieldTypes/CDropDownList\";\nimport LinkToEntry from \"../fieldTypes/LinkToEntry\";\nimport EntryViewHeader from \"./EntryViewHeader\";\nimport { useLocation } from \"react-router-dom\";\nimport EntryEditHeader from \"./EntryEditHeader\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  getRowDataById,\n  updateLibraryRecord,\n  addNewLibraryRecord,\n} from \"../../store/librariesData-slice\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { useMutation } from \"@apollo/client\";\nimport {\n  UPDATE_LIBRARY_ROWS_PG,\n  ADD_LIBRARY_ROWS_PG,\n} from \"../../API/graphQLTypes\";\nimport CScript from \"../fieldTypes/CScript\";\nimport { selectConfiguration } from \"../../store/configuration-slice\";\nimport { Alert, Divider, Grid, Snackbar } from \"@mui/material\";\n\nconst setComponentByType = (column, field, mode, options) => {\n  switch (column.type) {\n    case \"string\":\n      return <CString mode={mode} field={field}></CString>;\n    case \"float\":\n      return <CFloat mode={mode} field={field}></CFloat>;\n    case \"int\":\n      return <CInt mode={mode} field={field}></CInt>;\n    case \"image\":\n      return <CImage value={field.value} mode={mode} field={field}></CImage>;\n    case \"date\":\n      return <CDate mode={mode} field={field}></CDate>;\n    case \"dateTime\":\n      return <CDateTime mode={mode} field={field}></CDateTime>;\n    case \"barcode\":\n      return (\n        <CBarcode value={field.value} mode={mode} field={field}></CBarcode>\n      );\n    case \"audio\":\n      return <CAudio value={field.value} mode={mode} field={field}></CAudio>;\n    case \"checkbox\":\n      return <CCheckbox mode={mode} field={field}></CCheckbox>;\n    case \"dropDownList\":\n      return (\n        <CDropDownList\n          mode={mode}\n          field={field}\n          options={options}\n        ></CDropDownList>\n      );\n    case \"libEntry\":\n      // console.log(\"insetComponentByType - column: \", column);\n      return (\n        <LinkToEntry\n          mode={mode}\n          field={field}\n          columnTemplate={column}\n        ></LinkToEntry>\n      );\n    case \"script\":\n      return (\n        <CScript mode={mode} field={field} columnTemplate={column}></CScript>\n      );\n    default:\n      return <div>----</div>;\n  }\n};\n\nconst SingleEntryPage = () => {\n  const location = useLocation();\n  let libUUID = location.state?.libUUID;\n  let rowUUID = location.state?.rowUUID;\n  if (!libUUID) {\n    const entryViewConfigJson = localStorage.getItem(\"entryViewConfig\");\n    libUUID = JSON.parse(entryViewConfigJson).libUUID;\n    rowUUID = JSON.parse(entryViewConfigJson).rowUUID;\n  }\n  const dispatch = useDispatch();\n  const storageType = useSelector((state) =>\n    selectConfiguration(state)\n  )?.storageType;\n  const [isSnackbarOpen, setIsSnackbarOpen] = useState(false);\n  // const librariesData = useSelector((state) => selectAllDataLibrary(state));\n  const [updateEntryInPG] = useMutation(UPDATE_LIBRARY_ROWS_PG);\n  const [addEntryInPG] = useMutation(ADD_LIBRARY_ROWS_PG);\n\n  const [mode, setMode] = useState(\n    location?.state?.mode === \"addNewEntry\" ? \"addNewEntry\" : \"view\"\n  );\n  const { columns: columnsTemplates, sqlTableName } =\n    useSelector((state) => selectLibraryById(state, libUUID)) || {};\n  const row = useSelector((state) =>\n    getRowDataById(state, { rowUUID, libUUID })\n  );\n\n  const entry = { title: row?.fe_title, libUUID, rowUUID, mode };\n\n  const fieldsInit = columnsTemplates?.map((columnTemplate) => {\n    let options = [];\n    let fieldValue = row ? row[columnTemplate.sqlFieldName] : null;\n    if (columnTemplate?.type === \"libEntry\") {\n      options = columnTemplate?.options[0]?.dictionaryLibraryName;\n      fieldValue = row ? fieldValue : {};\n    } else if (columnTemplate?.type === \"dropDownList\")\n      options = columnTemplate?.options;\n    return {\n      type: columnTemplate?.type,\n      name: columnTemplate?.name,\n      order: columnTemplate?.order,\n      columnTemplate: columnTemplate,\n      options,\n      field: {\n        value: fieldValue,\n        columnUUID: columnTemplate?.columnUUID,\n        columnName: columnTemplate?.name,\n        entryLinks: row ? row[columnTemplate.sqlFieldName]?.entrylinks : [],\n      },\n    };\n  });\n  useEffect(() => {\n    // console.log(\"before updateEntryValues in Init\");\n    dispatch(updateEntryValues(fieldsInit));\n    return () => {\n      console.log(\"clear state after dismount component\");\n      dispatch(clearState());\n    };\n    // eslint-disable-next-line\n  }, []);\n\n  useEffect(() => {\n    // if (mode === \"edit\") {\n    // console.log(\"before updateEntryValues\");\n\n    localStorage.setItem(\n      \"entryViewConfig\",\n      JSON.stringify({ rowUUID, libUUID, mode })\n    );\n    dispatch(updateEntryValues(fieldsInit));\n    // }\n    // eslint-disable-next-line\n  }, [rowUUID, libUUID, columnsTemplates]);\n\n  const cancelHandler = () => {\n    // console.log(\"fieldsInit\", fieldsInit);\n    dispatch(updateEntryValues(fieldsInit));\n  };\n  const saveHandler = () => {\n    console.log(\"clicked save button\");\n    const savedRowUUID = mode === \"addNewEntry\" ? uuidv4() : rowUUID;\n    const editedEntry = {\n      editedFields: fields,\n      libUUID,\n      rowUUID: savedRowUUID,\n    };\n\n    if (mode === \"addNewEntry\") {\n      console.log(\"addNewEntryToDB\");\n      sendInsertedDataToDatabase(fields, savedRowUUID);\n      dispatch(addNewLibraryRecord(editedEntry));\n    } else {\n      console.log(\"updateEntryInDB\");\n      sendUpdatedDataToDatabase(fields);\n      dispatch(updateLibraryRecord(editedEntry));\n    }\n  };\n\n  const prepareDataForSendToPG = (updatedEntry, savedRowUUID) => {\n    console.log(\"updated/inserted Entry: \", savedRowUUID, updatedEntry);\n    const getValue = (field) => {\n      if (!field?.hasOwnProperty(\"value\")) return null;\n      if (field?.value?.hasOwnProperty(\"value\")) return field?.value?.value;\n      return field?.value;\n    };\n    const columns = updatedEntry.map((col) => {\n      const entryLinks = col.field?.entryLinks?.map((link) => {\n        return {\n          columnParentName: link.columnParentName\n            ? link.columnParentName\n            : col.columnTemplate.sqlFieldName,\n          libUUID: link.libUUID,\n          rowUUID: link.rowUUID,\n          tableName: link.tableName,\n          uuid: col.field.value.value,\n          tableParentName: sqlTableName,\n          rowParentUUID: savedRowUUID ? savedRowUUID : rowUUID,\n        };\n      });\n      return {\n        sqlFieldName: col?.columnTemplate?.sqlFieldName,\n        value: getValue(col?.field),\n        type: col?.columnTemplate?.type,\n        entryLinks,\n      };\n    });\n    // console.log(\"columns in mutation\", columns);\n    const rows = [\n      {\n        rowUUID: savedRowUUID ? savedRowUUID : rowUUID,\n        rowJSON: JSON.stringify(columns),\n      },\n    ];\n\n    const libData = { sqlTableName: sqlTableName, libUUID, rows };\n\n    return libData;\n  };\n\n  const sendInsertedDataToDatabase = (updatedEntry, savedRowUUID) => {\n    try {\n      const libData = prepareDataForSendToPG(updatedEntry, savedRowUUID);\n      console.log(\"libData if Mutation addEntryInPG\", libData);\n      if (storageType === \"outerDatabase\")\n        addEntryInPG({ variables: { libraryData: libData } });\n    } catch (error) {\n      console.log(\"error occurred while adding entry to db: \" + error);\n    }\n  };\n\n  const sendUpdatedDataToDatabase = (insertedEntry) => {\n    try {\n      const libData = prepareDataForSendToPG(insertedEntry);\n      console.log(\"libData if Mutation update\", libData);\n\n      if (storageType === \"outerDatabase\")\n        updateEntryInPG({ variables: { libraryData: libData } });\n    } catch (error) {\n      console.log(\"error occurred while updating entry: \" + error);\n    }\n  };\n\n  console.log(\"before selectAllFields\");\n  const fields = useSelector((state) => selectAllFields(state));\n\n  console.log(\"fields\", fields);\n  console.log(\"mode\", mode);\n\n  const snackbarCloseHandle = (event, reason) => {\n    if (reason === \"clickaway\") return;\n    setIsSnackbarOpen(false);\n  };\n\n  // useEffect(() => {}, [fields]);\n  const isEditMode = mode === \"edit\" || mode === \"addNewEntry\" ? true : false;\n  return (\n    <Fragment>\n      {mode === \"view\" && <EntryViewHeader entry={entry} setMode={setMode} />}\n      {isEditMode && (\n        <EntryEditHeader\n          entry={entry}\n          setMode={setMode}\n          actionButtonHandler={{\n            cancelHandler,\n            saveHandler,\n            setIsSnackbarOpen,\n          }}\n        />\n      )}\n      <Grid container spacing={1}>\n        {fields?.map((field) => {\n          return (\n            <Grid item xs={12} sx={{ m: 1 }} key={field?.field?.columnUUID}>\n              {setComponentByType(\n                field.columnTemplate,\n                field.field,\n                mode,\n                field.options\n              )}\n              <Divider />\n            </Grid>\n          );\n        })}\n      </Grid>\n      <Snackbar\n        open={isSnackbarOpen}\n        autoHideDuration={5000}\n        onClose={snackbarCloseHandle}\n      >\n        <Alert\n          onClose={snackbarCloseHandle}\n          severity=\"success\"\n          sx={{ width: \"100%\" }}\n        >\n          Entry saved successfully!\n        </Alert>\n      </Snackbar>\n    </Fragment>\n  );\n};\n\nexport default SingleEntryPage;\n","import {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  MenuItem,\n} from \"@mui/material\";\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { deleteLibraryData } from \"../../store/librariesData-slice\";\nimport { deleteLibraryTemplate } from \"../../store/templateLibraries-slice\";\n\nconst LibraryTileOptions = ({ libUUID, closeMenu }) => {\n  const history = useHistory();\n  const [isDeleteAlertOpen, setIsDeleteAlertOpen] = useState(false);\n  const dispatch = useDispatch();\n\n  const editHandler = (e) => {\n    e.preventDefault();\n    history.push({\n      pathname: \"/creator\",\n      state: { libUUID },\n    });\n  };\n\n  const deleteLibraryHandler = (e) => {\n    e.preventDefault();\n    closeMenu(e);\n    dispatch(deleteLibraryData({ libUUID }));\n    dispatch(deleteLibraryTemplate({ libUUID }));\n    setIsDeleteAlertOpen(false);\n  };\n\n  const openDeleteAlertHandler = (e) => {\n    e.preventDefault();\n    setIsDeleteAlertOpen(true);\n  };\n  const closeDeleteAlertHandler = (e) => {\n    e.preventDefault();\n    closeMenu(e);\n    setIsDeleteAlertOpen(false);\n  };\n\n  return (\n    <>\n      <MenuItem onClick={editHandler}>Edit template</MenuItem>\n      <MenuItem onClick={openDeleteAlertHandler}>Delete lib</MenuItem>\n      <MenuItem onClick={closeMenu}>Option 3</MenuItem>\n      <Dialog\n        open={isDeleteAlertOpen}\n        onClose={closeDeleteAlertHandler}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{\"Are you sure?\"}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            Do you want delete this library template with data? This can't be\n            undone.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={closeDeleteAlertHandler}>Disagree</Button>\n          <Button onClick={deleteLibraryHandler} autoFocus>\n            Agree\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\n\nexport default LibraryTileOptions;\n","import React from \"react\";\nimport LibraryTileOptions from \"../buttons/LibraryTileOptions\";\nimport { Link } from \"react-router-dom\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  Card,\n  CardHeader,\n  IconButton,\n  CardContent,\n  Typography,\n  CardMedia,\n  CardActions,\n  Menu,\n} from \"@mui/material\";\nimport MoreVertIcon from \"@mui/icons-material/MoreVert\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport { useState } from \"react\";\n\nconst src = \"https://img.icons8.com/ios/452/field.png\";\n\nconst LibraryTile = ({ library }) => {\n  const history = useHistory();\n  const [anchorEl, setAnchorEl] = useState(null);\n  const isMenuOpened = Boolean(anchorEl);\n  const handleOpenMenu = (event) => {\n    setAnchorEl(event.currentTarget);\n    event.preventDefault();\n  };\n  const handleCloseMenu = (event) => {\n    setAnchorEl(null);\n    event.preventDefault();\n  };\n\n  const addNewEntryHandler = (event) => {\n    event.preventDefault();\n    history.push({\n      pathname: \"/library/entry\",\n      state: { libUUID: library?.libUUID, mode: \"addNewEntry\", rowUUID: null },\n    });\n  };\n\n  return (\n    <Link\n      to={{\n        pathname: \"/library\",\n        state: { libUUID: library?.libUUID },\n      }}\n    >\n      <Card sx={{ maxWidth: 200, m: 1, backgroundColor: \"primary.light\" }}>\n        <CardHeader\n          avatar={\n            <CardMedia\n              image={src}\n              width=\"30\"\n              component=\"img\"\n              sx={{ maxWidth: 50 }}\n            />\n          }\n          action={\n            <IconButton\n              id=\"additional-action-button\"\n              aria-controls=\"additional-action-menu\"\n              aria-haspopup=\"true\"\n              aria-expanded={isMenuOpened ? \"true\" : undefined}\n              onClick={handleOpenMenu}\n            >\n              <MoreVertIcon />\n            </IconButton>\n          }\n          title=\"\"\n          subheader=\"\"\n        />\n        <Menu\n          id=\"additional-action-menu\"\n          aria-labelledby=\"additional-action-button\"\n          anchorEl={anchorEl}\n          open={isMenuOpened}\n          onClose={handleCloseMenu}\n          anchorOrigin={{\n            vertical: \"top\",\n            horizontal: \"left\",\n          }}\n          transformOrigin={{\n            vertical: \"top\",\n            horizontal: \"left\",\n          }}\n        >\n          <LibraryTileOptions\n            closeMenu={handleCloseMenu}\n            libUUID={library?.libUUID}\n          />\n        </Menu>\n        <CardContent>\n          <Typography variant=\"body1\" color=\"initial\">\n            {library?.name}\n          </Typography>\n          <Typography variant=\"body2\" color=\"initial\">\n            Entries: {library?.entriesCount}\n          </Typography>\n          <Typography variant=\"body3\" color=\"initial\">\n            {library?.lastModification}\n          </Typography>\n        </CardContent>\n        <CardActions disableSpacing>\n          <IconButton\n            size=\"large\"\n            variant=\"\"\n            edge=\"end\"\n            color=\"primary\"\n            aria-label=\"home\"\n            sx={{\n              mr: 1,\n              ml: \"auto\",\n              backgroundColor: \"primary.main\",\n              color: \"primary.dark\",\n              \"&:hover\": {\n                backgroundColor: \"secondary.light\",\n              },\n            }}\n            onClick={addNewEntryHandler}\n          >\n            <AddIcon />\n          </IconButton>\n        </CardActions>\n      </Card>\n    </Link>\n  );\n};\n\nexport default LibraryTile;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport classes from \"./LibrariesList.module.css\";\nimport LibraryTile from \"./LibraryTile\";\n\nconst LibrariesList = () => {\n  const libraries = useSelector((state) => state.librariesTemplate);\n  if (!libraries) return <div>...loading</div>;\n  return (\n    <ul className={classes.list}>\n      {libraries.map((lib) => {\n        return (\n          <li key={lib.libUUID}>\n            <LibraryTile library={lib} />\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default LibrariesList;\n","import { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { selectLibrariesInfo } from \"../../store/templateLibraries-slice\";\nimport classes from \"./LinkToLibraryField.module.css\";\n\nconst LinkToLibraryField = ({ setOptions, options: defaultOptions }) => {\n  const librariesInfo = useSelector((state) => selectLibrariesInfo(state));\n\n  const getOptionValue = () => {\n    if (!defaultOptions || defaultOptions?.length < 1) return [];\n    return librariesInfo.find(\n      (lib) => lib?.libUUID === defaultOptions[0]?.dictionaryLibraryUUID\n    )?.sqlTableName;\n  };\n  console.log(\n    \"getOptionValue\",\n    librariesInfo.find(\n      (lib) => lib?.libUUID === defaultOptions?.dictionaryLibraryUUID\n    )\n  );\n  const [chosenLibrary, setChosenLibrary] = useState(getOptionValue());\n\n  const applyOptions = (index) => {\n    if (librariesInfo.length <= index) return;\n    const options = [\n      {\n        dictionaryLibraryName: librariesInfo[index].name,\n        dictionaryLibraryUUID: librariesInfo[index].libUUID,\n      },\n    ];\n    setOptions(options);\n  };\n\n  useEffect(() => {\n    if (librariesInfo.length) applyOptions(0);\n    // eslint-disable-next-line\n  }, [librariesInfo]);\n\n  console.log(\"librariesInfo\", librariesInfo);\n  const chooseLibHandler = (e) => {\n    console.log(\"LinkToLibraryField in chooseLibHandler\", e);\n    const idx = e.target.selectedIndex;\n    applyOptions(idx);\n    setChosenLibrary(e.target.value);\n  };\n\n  return (\n    <div className={classes.main}>\n      Choose library from list\n      <select onChange={chooseLibHandler} defaultValue={chosenLibrary}>\n        {librariesInfo.map((lib) => (\n          <option key={lib.libUUID} value={lib.sqlTableName}>\n            {lib.name}\n          </option>\n        ))}\n      </select>\n    </div>\n  );\n};\nexport default LinkToLibraryField;\n","import { Fragment, useState } from \"react\";\nimport classes from \"./SelectField.module.css\";\n\nconst SelectField = ({ setOptions, options }) => {\n  const [points, setPoints] = useState(options || []);\n  const [showAddModal, setShowAddModal] = useState(false);\n  const [pointName, setPointName] = useState(\"\");\n  const [isDefault, setIsDefault] = useState(false);\n\n  const addPointHandler = (e) => {\n    e.preventDefault();\n    const point = {\n      default: points.find((point) => point.default) ? false : isDefault,\n      index: points.length + 1,\n      value: pointName,\n    };\n    if (pointName) {\n      const newPoints = [...points, point];\n      setPoints([...points, point]);\n      setOptions(newPoints);\n    }\n    setPointName();\n    setShowAddModal(false);\n    setIsDefault(false);\n  };\n  const removePointFromListHandler = (e, index) => {\n    e.preventDefault();\n    const newPointsList = [...points];\n    newPointsList.splice(index, 1);\n    setPoints(newPointsList);\n  };\n\n  console.log(\"points\", points, \"options\", options);\n\n  return (\n    <Fragment>\n      <div>\n        Point list:\n        <ul className={classes.ul}>\n          {points.map((point, idx) => {\n            return (\n              <li key={idx} className={classes.list}>\n                {point.value} {point.default ? \"✔\" : null}\n                <button onClick={(e) => removePointFromListHandler(e, idx)}>\n                  &#10005;\n                </button>\n              </li>\n            );\n          })}\n        </ul>\n        {showAddModal && (\n          <div className={classes.modal}>\n            <header className={classes.header}>\n              <button\n                onClick={() => {\n                  setShowAddModal(false);\n                }}\n              >\n                &larr;\n              </button>\n              <button onClick={addPointHandler}>&#10003;</button>\n            </header>\n            <label htmlFor=\"pointName\">Point name:</label>\n            <input\n              type=\"text\"\n              id=\"pointName\"\n              defaultValue={pointName}\n              onChange={(e) => setPointName(e.target.value)}\n            ></input>\n            <label htmlFor=\"isDefault\">Is point Default?</label>\n            <input\n              type=\"checkbox\"\n              id=\"isDefault\"\n              defaultChecked={isDefault}\n              onChange={(e) => setIsDefault(e.target.checked)}\n            ></input>\n          </div>\n        )}\n        <button\n          onClick={(e) => {\n            setShowAddModal(true);\n            e.preventDefault();\n          }}\n        >\n          Add\n        </button>\n        {showAddModal && <div className={classes.backdrop}></div>}\n      </div>\n    </Fragment>\n  );\n};\n\nexport default SelectField;\n","import { Fragment, useState } from \"react\";\nimport LinkToLibraryField from \"./LinkToLibraryField\";\nimport SelectField from \"./SelectField\";\nimport classes from \"./TemplateFieldCreator.module.css\";\n\nconst prepareSqlFieldName = (name) => {\n  let preparedName = name\n    .replaceAll(\"  \", \" \")\n    .replaceAll(\" \", \"_\")\n    .toLowerCase();\n  return preparedName;\n};\n\nconst getScriptCode = (column) => {\n  const jsonString = column?.options[0]?.script;\n  const script = JSON.parse(jsonString);\n\n  return script.expr;\n};\n\nconst TemplateFieldCreator = ({\n  saveFieldConfigHandler,\n  fieldConfigTemplate,\n  cancelModal,\n  fieldConfig: fieldConfigForUpdate,\n}) => {\n  const availableFieldTypes = [\n    { name: \"Text\", type: \"string\" },\n    { name: \"Float\", type: \"float\" },\n    { name: \"Int\", type: \"int\" },\n    { name: \"Image\", type: \"image\" },\n    { name: \"Audio\", type: \"audio\" },\n    { name: \"Date time\", type: \"dateTime\" },\n    { name: \"Checkbox\", type: \"checkbox\" },\n    { name: \"Script\", type: \"script\" },\n    { name: \"Dropdown list\", type: \"dropDownList\" },\n    { name: \"Link to library\", type: \"libEntry\" },\n  ];\n\n  const availableFieldViewOptions = [\n    { name: \"Normal\", type: \"normal\" },\n    { name: \"Title\", type: \"title\" },\n    { name: \"Description\", type: \"description\" },\n    { name: \"Status\", type: \"status\" },\n  ];\n\n  const getFieldType = () => {\n    return availableFieldTypes.find(\n      (fieldType) => fieldType.type === fieldConfig[\"type\"]\n    )?.type;\n  };\n\n  const fieldConfigInit = {\n    usage: availableFieldViewOptions[0].type,\n  };\n  const [fieldConfig, setFieldConfig] = useState(\n    fieldConfigForUpdate || fieldConfigInit\n  );\n  const [fieldType, setFieldType] = useState(\n    getFieldType() || availableFieldTypes[0].type\n  );\n  const [fieldOptions, setFieldOptions] = useState(fieldConfig.options || []);\n\n  const setOptions = (options) => {\n    setFieldOptions(options);\n  };\n\n  const getValueFromElement = (element) => {\n    if (element.type === \"checkbox\") return element.checked ? 1 : 0;\n    return element.value;\n  };\n\n  const saveScriptCodeHandler = (e) => {\n    console.log(\"scriptValue\", e.target.value);\n    const options = [];\n    const jsonString = fieldConfig?.options[0]?.script;\n    const script = JSON.parse(jsonString);\n    script.expr = e.target.value;\n    options[0] = { script: JSON.stringify(script) };\n    setFieldOptions(options);\n  };\n\n  const setInputValueHandler = (e) => {\n    console.log(\"e\", e);\n    console.log(\"fieldValue\", e.target.value);\n    console.log(\"target\", e.target);\n    setFieldConfig((prevFieldConfig) => {\n      return {\n        ...prevFieldConfig,\n        [e.target.id]: getValueFromElement(e.target),\n      };\n    });\n  };\n  console.log(\"fieldType\", fieldType);\n  console.log(\"fieldConfig\", fieldConfig);\n\n  const submitHandle = (e) => {\n    e.preventDefault();\n    console.log(e.target);\n    const fieldConfigTmp = { ...fieldConfig };\n    fieldConfigTmp.type = fieldType;\n    fieldConfigTmp.sqlFieldName = prepareSqlFieldName(fieldConfigTmp.name);\n    fieldConfigTmp.options = fieldOptions;\n\n    saveFieldConfigHandler(fieldConfigTmp);\n  };\n\n  const hintField = (fieldType) => {\n    if (\n      fieldType === \"checkbox\" ||\n      fieldType === \"dropDownList\" ||\n      fieldType === \"libEntry\" ||\n      fieldType === \"script\"\n    )\n      return null;\n    return (\n      <Fragment>\n        <label htmlFor=\"description\">Hint:</label>\n        <input\n          type=\"text\"\n          id=\"description\"\n          // value={fieldConfig?.fieldName}\n          onBlur={setInputValueHandler}\n          defaultValue={fieldConfig[\"description\"]}\n        />\n      </Fragment>\n    );\n  };\n\n  const defaultValueField = (fieldType) => {\n    if (\n      fieldType === \"dropDownList\" ||\n      fieldType === \"libEntry\" ||\n      fieldType === \"script\"\n    )\n      return null;\n    if (fieldType === \"checkbox\")\n      return (\n        <Fragment>\n          <label htmlFor=\"defaultValue\">Default value:</label>\n          <input\n            type=\"checkbox\"\n            id=\"defaultValue\"\n            // value={fieldConfig?.fieldName}\n            onChange={setInputValueHandler}\n            defaultChecked={fieldConfig[\"defaultValue\"]}\n          />\n        </Fragment>\n      );\n\n    return (\n      <Fragment>\n        <label htmlFor=\"defaultValue\">Default value:</label>\n        <input\n          type=\"text\"\n          id=\"defaultValue\"\n          // value={fieldConfig?.fieldName}\n          onBlur={setInputValueHandler}\n          defaultValue={fieldConfig[\"defaultValue\"]}\n        />\n      </Fragment>\n    );\n  };\n\n  console.log(\"aviableTypesFound! \", getFieldType(), fieldConfig[\"type\"]);\n\n  return (\n    <Fragment>\n      <div className={classes.modal}>\n        <div className={classes.container}>\n          <header className={classes.header}>\n            <button id=\"cancelFields\" onClick={cancelModal}>\n              &larr;\n            </button>\n            <button id=\"submitFields\" onClick={submitHandle}>\n              &#10003;\n            </button>\n          </header>\n          <h2>Field Creator</h2>\n          {\n            <section className={classes.type}>\n              <label htmlFor=\"field\">Field type:</label>\n              <select\n                name=\"field\"\n                id=\"field\"\n                onChange={(e) => setFieldType(e.target.value)}\n                defaultValue={fieldType}\n              >\n                {availableFieldTypes.map((availableType) => {\n                  return (\n                    <option key={availableType.type} value={availableType.type}>\n                      {availableType.name}\n                    </option>\n                  );\n                })}\n              </select>\n            </section>\n          }\n          {fieldType && (\n            <form className={classes.form}>\n              <label htmlFor=\"name\">Field Name:</label>\n              <input\n                type=\"text\"\n                id=\"name\"\n                // value={fieldConfig?.fieldName}\n                onBlur={setInputValueHandler}\n                defaultValue={fieldConfig[\"name\"]}\n              />\n              <label htmlFor=\"sqlFieldType\">Field sql type:</label>\n              <input\n                type=\"text\"\n                id=\"sqlFieldType\"\n                // value={fieldConfig?.fieldName}\n                onBlur={setInputValueHandler}\n                defaultValue={fieldConfig[\"sqlFieldType\"]}\n              />\n              {hintField(fieldType)}\n              {defaultValueField(fieldType)}\n              {fieldType === \"dropDownList\" && (\n                <SelectField\n                  setOptions={setOptions}\n                  options={fieldConfig.options}\n                />\n              )}\n              {fieldType === \"libEntry\" && (\n                <LinkToLibraryField\n                  setOptions={setOptions}\n                  options={fieldConfig.options}\n                />\n              )}\n              {fieldType === \"script\" && (\n                <Fragment>\n                  <label htmlFor=\"script\"> Script code </label>\n                  <textarea\n                    defaultValue={getScriptCode(fieldConfig)}\n                    rows={20}\n                    onBlur={saveScriptCodeHandler}\n                  ></textarea>\n                </Fragment>\n              )}\n\n              <label htmlFor=\"usage\">Field view:</label>\n              <select\n                id=\"usage\"\n                name=\"usage\"\n                onChange={setInputValueHandler}\n                defaultValue={fieldConfig[\"usage\"]}\n              >\n                {availableFieldViewOptions.map((option) => {\n                  return (\n                    <option key={option.type} value={option.type}>\n                      {option.name}\n                    </option>\n                  );\n                })}\n              </select>\n\n              {/* <input type=\"button\" value=\"add\" onClick={submitHandle} /> */}\n            </form>\n          )}\n        </div>\n      </div>\n      <div className={classes.backdrop}></div>\n    </Fragment>\n  );\n};\n\nexport default TemplateFieldCreator;\n","import classes from \"./TemplateFieldBox.module.css\";\n\nconst TemplateFieldBox = ({ fieldConfig, editField }) => {\n  return (\n    <li\n      key={fieldConfig.columnUUID}\n      className={classes.box}\n      onClick={() => editField(fieldConfig.columnUUID)}\n    >\n      <div className={classes.leftSide}>\n        <div> {fieldConfig.name} </div>\n        <div className={classes.description}>\n          <div> {fieldConfig.type}</div>\n          {fieldConfig.options.length > 0 && (\n            <div className={classes.libName}>\n              &emsp; {fieldConfig.options[0].dictionaryLibraryName}\n            </div>\n          )}\n        </div>\n      </div>\n      <div> {fieldConfig.usage}</div>\n    </li>\n  );\n};\n\nexport default TemplateFieldBox;\n","import { useState, useEffect } from \"react\";\nimport TemplateFieldCreator from \"./TemplateFieldCreator\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport TemplateFieldBox from \"./TemplateFieldBox\";\nimport classes from \"./TemplateFields.module.css\";\n\nconst TemplateFields = ({ saveFieldsConfigHandler, fields }) => {\n  const [fieldsConfig, setFieldsConfig] = useState(fields || []);\n  const [mode, setMode] = useState(\"view\");\n  const [fieldConfig, setFieldConfig] = useState();\n\n  useEffect(() => {\n    saveFieldsConfigHandler(fieldsConfig);\n    // eslint-disable-next-line\n  }, [fieldsConfig]);\n\n  const addFieldConfig = (fieldConfig) => {\n    console.log(\"fieldConfig in TemplateFieldCreator\", fieldConfig);\n    if (!fieldConfig?.columnUUID) fieldConfig.columnUUID = uuidv4();\n\n    setFieldsConfig((prev) => [...prev, fieldConfig]);\n    setMode(\"view\");\n  };\n\n  const editFieldHandler = (columnUUID) => {\n    setMode(\"edit\");\n    const foundField = fieldsConfig.find(\n      (field) => field.columnUUID === columnUUID\n    );\n    setFieldConfig(foundField);\n  };\n\n  const updateFieldConfig = (fieldConfig) => {\n    console.log(\"update\", fieldConfig);\n    let foundFieldIdx = fieldsConfig.findIndex(\n      (field) => field.columnUUID === fieldConfig.columnUUID\n    );\n    const newFieldsConfig = [...fieldsConfig];\n    newFieldsConfig[foundFieldIdx] = fieldConfig;\n    setFieldsConfig(newFieldsConfig);\n    setMode(\"view\");\n  };\n\n  console.log(\"LIST fieldsConfig\", fieldsConfig);\n  return (\n    <div className={classes.fields}>\n      template fields\n      <ul className={classes.ul}>\n        {fieldsConfig.length === 0 && <div>No field added yet...</div>}\n        {fieldsConfig?.map((fieldConfig) => {\n          return (\n            <TemplateFieldBox\n              key={fieldConfig.columnUUID}\n              fieldConfig={fieldConfig}\n              editField={editFieldHandler}\n            ></TemplateFieldBox>\n          );\n        })}\n      </ul>\n      <button onClick={() => setMode(\"addNew\")} className={classes.addButton}>\n        +\n      </button>\n      {mode === \"addNew\" && (\n        <TemplateFieldCreator\n          saveFieldConfigHandler={addFieldConfig}\n          cancelModal={() => setMode(\"view\")}\n        />\n      )}\n      {mode === \"edit\" && (\n        <TemplateFieldCreator\n          saveFieldConfigHandler={updateFieldConfig}\n          cancelModal={() => setMode(\"view\")}\n          fieldConfig={{ ...fieldConfig }}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default TemplateFields;\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { clearState } from \"../../store/editedEntry-slice\";\nimport classes from \"./GoBack.module.css\";\n\nconst GoBack = (props) => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const goBackHandler = () => {\n    if (props?.clearEntryStore) {\n      console.log(\"clear state\");\n      dispatch(clearState());\n    }\n    history.goBack();\n  };\n  return (\n    <button onClick={goBackHandler} className={classes.goBack}>\n      &larr;\n    </button>\n  );\n};\n\nexport default GoBack;\n","import TemplateFields from \"./TemplateFields\";\nimport { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  addNewLibraryTemplate,\n  selectLibraryById,\n} from \"../../store/templateLibraries-slice\";\nimport { useMutation } from \"@apollo/client\";\nimport {\n  ADD_LIBRARY_TEMPLATE_PG,\n  UPDATE_LIBRARY_TEMPLATE_PG,\n} from \"../../API/graphQLTypes\";\nimport GoBack from \"../buttons/GoBack\";\nimport { useHistory } from \"react-router-dom\";\nimport classes from \"./TemplateLibraryCreator.module.css\";\nimport { useLocation } from \"react-router-dom\";\nimport { addNewLibraryData } from \"../../store/librariesData-slice\";\nimport { selectConfiguration } from \"../../store/configuration-slice\";\n\nconst prepareSqlFieldName = (name) => {\n  let preparedName = name\n    ?.replaceAll(\"  \", \" \")\n    ?.replaceAll(\" \", \"_\")\n    ?.toLowerCase();\n  return preparedName;\n};\n\nconst TemplateLibraryCreator = () => {\n  const location = useLocation();\n  let libUUID = null;\n  libUUID = location?.state?.libUUID;\n  const [libConfig, setLibConfig] = useState({});\n  const [showPanel, setShowPanel] = useState(\"main\");\n  const dispatch = useDispatch();\n  const [insertTemplateInPG] = useMutation(ADD_LIBRARY_TEMPLATE_PG);\n  const [updateTemplateInPG] = useMutation(UPDATE_LIBRARY_TEMPLATE_PG);\n  const history = useHistory();\n  const isUpdate = libUUID ? true : false;\n  const saveFieldsConfigHandler = (fieldsConfig) => {\n    setLibConfig((prev) => {\n      return { ...prev, columns: fieldsConfig };\n    });\n  };\n  const storageType = useSelector((state) =>\n    selectConfiguration(state)\n  )?.storageType;\n\n  const templateLibSelected = useSelector((state) =>\n    selectLibraryById(state, libUUID)\n  );\n  if (libUUID && !libConfig?.libUUID) {\n    setLibConfig({\n      ...templateLibSelected,\n    });\n  }\n\n  if (!libUUID && !libConfig?.libUUID)\n    setLibConfig((prev) => {\n      return { ...prev, libUUID: uuidv4() };\n    });\n\n  console.log(\"libConfig\", libConfig);\n\n  const setInputValueHandler = (e) => {\n    setLibConfig((prev) => {\n      return { ...prev, [e.target.id]: e.target.value };\n    });\n  };\n\n  const saveLibraryHandler = () => {\n    try {\n      console.log(\"saveLibraryHandler\");\n      const libConfigTmp = { ...libConfig };\n      libConfigTmp.sqlTableName = prepareSqlFieldName(libConfigTmp.name);\n      dispatch(addNewLibraryTemplate(libConfigTmp));\n      dispatch(\n        addNewLibraryData({\n          name: libConfigTmp.name,\n          libUUID: libConfigTmp.libUUID,\n        })\n      );\n      if (!isUpdate) {\n        if (storageType === \"outerDatabase\")\n          insertTemplateInPG({ variables: { libraryTemplate: libConfigTmp } });\n      } else if (storageType === \"outerDatabase\")\n        updateTemplateInPG({ variables: { libraryTemplate: libConfigTmp } });\n\n      history.push(\"/\");\n    } catch (error) {\n      console.log(\n        `error occurred while update/insert template in db/state manager: ${error}`\n      );\n    }\n  };\n  const buttonActive = {\n    checkMain: () => (showPanel === \"main\" ? classes.active : []),\n    checkFields: () => (showPanel === \"fields\" ? classes.active : []),\n  };\n  return (\n    <div className={classes.main}>\n      <header className={classes.header}>\n        <div className={classes.goBack}>\n          <GoBack />\n        </div>\n        <button onClick={saveLibraryHandler}>&#10003;</button>\n      </header>\n      <section className={classes.tab}>\n        <button\n          onClick={() => setShowPanel(\"main\")}\n          className={[classes.tabButton, buttonActive.checkMain()].join(\" \")}\n        >\n          Main\n        </button>\n        <button\n          onClick={() => setShowPanel(\"fields\")}\n          className={[classes.tabButton, buttonActive.checkFields()].join(\" \")}\n        >\n          Field\n        </button>\n      </section>\n      {showPanel === \"main\" && (\n        <section\n          className={[classes.mainOptions, buttonActive.checkMain()].join(\" \")}\n        >\n          <label htmlFor=\"name\"> Name</label>\n          <input\n            type=\"edit\"\n            id=\"name\"\n            onBlur={setInputValueHandler}\n            defaultValue={libConfig.name}\n          ></input>\n          <label htmlFor=\"color\"> Color</label>\n          <input type=\"color\" id=\"color\" onBlur={setInputValueHandler}></input>\n          <label htmlFor=\"group\"> Group</label>\n          <input type=\"text\" id=\"group\" onBlur={setInputValueHandler}></input>\n        </section>\n      )}\n      {showPanel === \"fields\" && (\n        <div className={[buttonActive.checkFields()].join(\" \")}>\n          <TemplateFields\n            saveFieldsConfigHandler={saveFieldsConfigHandler}\n            fields={libConfig.columns}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\nexport default TemplateLibraryCreator;\n","import { MenuItem } from \"@mui/material\";\n// import { useState } from \"react\";\nimport { useHistory } from \"react-router\";\n// import classes from \"./HeaderMenuOptions.module.css\";\n\nconst HeaderMenuOptions = ({ handleCloseMenu }) => {\n  const history = useHistory();\n\n  const handleConfiguration = () => {\n    history.push(\"/configuration\");\n    handleCloseMenu();\n  };\n\n  const handleNewLibraryCreator = () => {\n    history.push(\"/creator\");\n    handleCloseMenu();\n  };\n  return (\n    <>\n      <MenuItem onClick={handleConfiguration}>Configuration</MenuItem>\n      <MenuItem onClick={handleNewLibraryCreator}>New Library</MenuItem>\n    </>\n  );\n};\nexport default HeaderMenuOptions;\n","import { AppBar, IconButton, Menu, Toolbar, Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport { useState } from \"react\";\nimport SettingsIcon from \"@mui/icons-material/Settings\";\nimport HeaderMenuOptions from \"./HeaderMenuOptions\";\nimport { useHistory } from \"react-router\";\n\nconst MainTopHeader = () => {\n  const [anchorElement, setAnchorElement] = useState(null);\n  const handleMenu = (event) => {\n    setAnchorElement(event.currentTarget);\n  };\n  const handleClose = () => {\n    setAnchorElement(null);\n  };\n  const history = useHistory();\n\n  const handleConfiguration = () => {\n    history.push(\"/configuration\");\n  };\n\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton\n            size=\"large\"\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"settings\"\n            sx={{ mr: 2 }}\n            onClick={handleConfiguration}\n          >\n            <SettingsIcon />\n          </IconButton>\n          <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n            Default group\n          </Typography>\n\n          <IconButton\n            size=\"large\"\n            aria-label=\"config\"\n            aria-controls=\"menu-appbar\"\n            aria-haspopup=\"true\"\n            onClick={handleMenu}\n            color=\"inherit\"\n          >\n            <MenuIcon />\n          </IconButton>\n          <Menu\n            id=\"menu-appbar\"\n            anchorEl={anchorElement}\n            anchorOrigin={{\n              vertical: \"top\",\n              horizontal: \"right\",\n            }}\n            keepMounted\n            transformOrigin={{\n              vertical: \"top\",\n              horizontal: \"right\",\n            }}\n            open={Boolean(anchorElement)}\n            onClose={handleClose}\n          >\n            <HeaderMenuOptions handleCloseMenu={handleClose} />\n          </Menu>\n        </Toolbar>\n      </AppBar>\n    </Box>\n  );\n};\n\nexport default MainTopHeader;\n","import {\n  Alert,\n  Button,\n  FormControl,\n  MenuItem,\n  Select,\n  Snackbar,\n} from \"@mui/material\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport { Box } from \"@mui/system\";\nimport { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  updateConfiguration,\n  selectConfiguration,\n} from \"../../store/configuration-slice\";\nimport Header from \"../library/Header\";\n\nconst Configuration = () => {\n  const dispatch = useDispatch();\n  const config = useSelector((state) => selectConfiguration(state));\n  const [storageType, setStorageType] = useState(config?.storageType);\n  const [isSnackbarOpen, setIsSnackbarOpen] = useState(false);\n  const storageTypeHandler = (e) => {\n    setStorageType(e.target.value);\n  };\n  const saveConfigHandler = (event) => {\n    const configForSave = {\n      storageType,\n    };\n    dispatch(updateConfiguration(configForSave));\n    localStorage.setItem(\"config\", JSON.stringify(configForSave));\n    event.preventDefault();\n    setIsSnackbarOpen(true);\n  };\n  const snackbarCloseHandle = (event, reason) => {\n    if (reason === \"clickaway\") return;\n    setIsSnackbarOpen(false);\n  };\n\n  return (\n    <>\n      <Header title=\"Configuration\" />\n      <form onSubmit={saveConfigHandler}>\n        <Box display=\"flex\" flexDirection=\"column\">\n          <FormControl sx={{ m: 3 }}>\n            <InputLabel id=\"storageTypeLabel\">Storage type</InputLabel>\n            <Select\n              labelId=\"storageTypeLabel\"\n              id=\"storageType\"\n              value={storageType}\n              onChange={storageTypeHandler}\n              autoWidth\n              label=\"Storage type\"\n            >\n              <MenuItem value=\"localStorage\">Local storage</MenuItem>\n              <MenuItem value=\"outerDatabase\">Outer database</MenuItem>\n            </Select>\n          </FormControl>\n          <Button type=\"submit\" variant=\"contained\">\n            Save\n          </Button>\n          <Snackbar\n            open={isSnackbarOpen}\n            autoHideDuration={5000}\n            onClose={snackbarCloseHandle}\n          >\n            <Alert\n              onClose={snackbarCloseHandle}\n              severity=\"success\"\n              sx={{ width: \"100%\" }}\n            >\n              Config saved successfully!\n            </Alert>\n          </Snackbar>\n        </Box>\n      </form>\n    </>\n  );\n};\n\nexport default Configuration;\n","import \"./App.css\";\nimport EntriesList from \"./components/library/EntriesList\";\nimport SingleEntryPage from \"./components/library/SingleEntryPage\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport { Fragment, useEffect } from \"react\";\nimport LibrariesList from \"./components/library/LibrariesList\";\nimport { useQuery } from \"@apollo/client\";\nimport { useDispatch } from \"react-redux\";\nimport { updateAllLibraries } from \"./store/templateLibraries-slice\";\nimport {\n  GET_LIBRARIES_TEMPLATES,\n  GET_LIBRARIES_DATA_PG,\n} from \"./API/graphQLTypes\";\nimport {\n  updateAllLibrariesData,\n  updateAllLibrariesDataFromStorage,\n} from \"./store/librariesData-slice\";\nimport TemplateLibraryCreator from \"./components/templates/TemplateLibraryCreator\";\nimport MainTopHeader from \"./UI/MainTopHeader\";\nimport Configuration from \"./components/configuration/Configuration\";\nimport { updateConfiguration } from \"./store/configuration-slice\";\n\nfunction App() {\n  console.log(\"main function APP\");\n  const {\n    loading: loadingDataPg,\n    error: errorDataPg,\n    data: dataPg,\n  } = useQuery(GET_LIBRARIES_DATA_PG);\n  const { loading, error, data } = useQuery(GET_LIBRARIES_TEMPLATES);\n  const dispatch = useDispatch();\n  // const { storageType } = useSelector((state) => selectConfiguration(state));\n\n  useEffect(() => {\n    console.log(\"read data from localStorage\");\n    const configJson = localStorage.getItem(\"config\");\n    dispatch(updateConfiguration(JSON.parse(configJson)));\n    const templatesJson = localStorage.getItem(\"templates\");\n    dispatch(updateAllLibraries(JSON.parse(templatesJson)));\n    const dataJson = localStorage.getItem(\"libsData\");\n    dispatch(updateAllLibrariesDataFromStorage(JSON.parse(dataJson)));\n    // eslint-disable-next-line\n  }, []);\n\n  useEffect(() => {\n    if (error) console.error(\"error In GET_LIBRARIES_TEMPLATES\", error);\n    else if (!loading) dispatch(updateAllLibraries(data?.librariesTemplates));\n  }, [data, dispatch, loading, error]);\n\n  useEffect(() => {\n    if (errorDataPg)\n      console.error(\"error In GET_LIBRARIES_DATA_PG\", errorDataPg);\n    else if (!loadingDataPg)\n      // dispatch(updateAllLibrariesRecords(dataData?.librariesData));\n      dispatch(updateAllLibrariesData(dataPg?.librariesDataPG));\n    // console.log(dataPg);\n  }, [loadingDataPg, dataPg, dispatch, errorDataPg]);\n\n  return (\n    <Router>\n      <Switch>\n        <Route\n          exact\n          path=\"/\"\n          render={() => (\n            <Fragment>\n              <MainTopHeader />\n              <LibrariesList />\n            </Fragment>\n          )}\n        />\n        <Route exact path=\"/library\" component={EntriesList} />\n        <Route exact path=\"/library/entry/\" component={SingleEntryPage} />\n        <Route exact path=\"/creator\" component={TemplateLibraryCreator} />\n        <Route exact path=\"/configuration\" component={Configuration} />\n        <Redirect to=\"/\" />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = { items: [] };\n\nexport const librariesRecordsSlice = createSlice({\n  name: \"librariesRecords\",\n  initialState,\n  reducers: {\n    test(state, action) {\n      console.log(\"test reducers\");\n      console.log(\"state\", state);\n      console.log(\"action.payload\", action.payload);\n    },\n    updateAllLibrariesRecords(state, action) {\n      // console.log(\"updateAllLibrariesRecords action.payload\", action.payload);\n      // state = action.payload.map((lib) => state.push(lib));\n      console.log(\"updateAllLibrariesRecords\");\n      state.items = action.payload;\n    },\n    updateLibraryRecord(state, action) {\n      const { libUUID, rowUUID, editedFields } = action.payload;\n      const oldState = { ...state.items };\n      const libIndex = state.items.findIndex((lib) => lib.libUUID === libUUID);\n      const rowIndex = state.items[libIndex].rows.findIndex(\n        (row) => row.rowUUID === rowUUID\n      );\n      // const temp = [...state.items];\n      const fields = oldState[libIndex].rows[rowIndex].columns.map((column) => {\n        const { entryLinks, value } = editedFields.find((item) => {\n          // console.log(\"item.field.columnUUID\", item.field.columnUUID);\n          // console.log(\"column.columnUUID\", column.columnUUID);\n          return item.field.columnUUID === column.columnUUID;\n        }).field;\n        // column.value = value;\n        // column.entryLinks = entryLinks;\n        return { ...column, value, entryLinks };\n      });\n      oldState[libIndex].rows[rowIndex].columns = fields;\n      console.log(\"updateLibraryRecord\");\n      // state.items = JSON.parse(oldStateJson);\n      // const oldStateJson = JSON.stringify(oldState.items);\n\n      // state.items = { ...oldState };\n      console.log(\"updateLibraryRecord 2\");\n\n      return void { ...state, items: oldState };\n    },\n  },\n});\n\nexport const { test, updateAllLibrariesRecords, updateLibraryRecord } =\n  librariesRecordsSlice.actions;\n\nexport default librariesRecordsSlice.reducer;\n\nexport const selectRowById = (state, { libUUID, entryUUID }) =>\n  state.librariesRecords?.items\n    ?.find((lib) => lib.libUUID === libUUID)\n    ?.rows.find((row) => row.rowUUID === entryUUID);\n\nexport const selectRowsByLibraryId = (state, libUUID) =>\n  state.librariesRecords?.items?.find((lib) => lib.libUUID === libUUID)?.rows;\n\nexport const selectLibrariesInfo = (state) => {\n  return state?.librariesRecords?.items?.map((lib) => {\n    return {\n      name: lib.name,\n      id: lib.id,\n      uuid: lib.libUUID,\n      entriesCount: lib?.rows?.length,\n      lastModification: \"\",\n    };\n  });\n};\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport editedEntrySlice from \"./editedEntry-slice\";\nimport librariesDataSlice from \"./librariesData-slice\";\nimport librariesRecordsSlice from \"./librariesRecords-slice\";\nimport librariesTemplateSlice from \"./templateLibraries-slice\";\nimport configurationSlice from \"./configuration-slice\";\n\nconst store = configureStore({\n  reducer: {\n    librariesTemplate: librariesTemplateSlice,\n    librariesRecords: librariesRecordsSlice,\n    editedEntry: editedEntrySlice,\n    librariesData: librariesDataSlice,\n    configuration: configurationSlice,\n  },\n});\n\nexport default store;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { selectAllDataLibrary } from \"./librariesData-slice\";\nimport { selectAllLibraries } from \"./templateLibraries-slice\";\n\nconst BrowserStore = () => {\n  console.log(\"BrowserStore\");\n  const librariesData = useSelector((state) => selectAllDataLibrary(state));\n  if (librariesData.length)\n    localStorage.setItem(\"libsData\", JSON.stringify(librariesData));\n\n  const templateLibraries = useSelector((state) => selectAllLibraries(state));\n  if (templateLibraries.length)\n    localStorage.setItem(\"templates\", JSON.stringify(templateLibraries));\n\n  return <></>;\n};\n\nexport default BrowserStore;\n","import { createTheme } from \"@mui/material\";\nimport { grey, yellow } from \"@mui/material/colors\";\n\nexport const customTheme = createTheme({\n  palette: {\n    primary: {\n      dark: grey[700],\n      main: grey[500],\n      light: grey[400],\n      lighter: grey[200],\n    },\n    secondary: {\n      main: yellow[300],\n      light: yellow[100],\n      dark: yellow[600],\n    },\n  },\n});\n","import React, { Fragment } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store/store\";\nimport { ApolloClient, InMemoryCache, ApolloProvider } from \"@apollo/client\";\nimport BrowserStore from \"./store/browser-store\";\nimport { ThemeProvider } from \"@mui/system\";\nimport { customTheme } from \"./style/customTheme\";\nimport { SERVER_IP } from \"./API/config\";\n\nconst client = new ApolloClient({\n  uri: SERVER_IP,\n  cache: new InMemoryCache({\n    addTypename: false,\n  }),\n});\n// window.__APOLLO_CLIENT__ = true;\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ApolloProvider client={client}>\n        <ThemeProvider theme={customTheme}>\n          <Fragment>\n            <App />\n            <BrowserStore />\n          </Fragment>\n        </ThemeProvider>\n      </ApolloProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export const SERVER_IP = \"http://192.168.55.37:4000\";\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = { items: [] };\n\nexport const editedEntrySlice = createSlice({\n  name: \"editedEntry\",\n  initialState,\n  reducers: {\n    clearState(state, action) {\n      state.items = [];\n    },\n\n    updateFieldValue(state, action) {\n      const { columnUUID, value: valueIn, type, checked } = action.payload;\n      const fieldIndex = state.items.findIndex(\n        (field) => field.field.columnUUID === columnUUID\n      );\n      let value = valueIn;\n      // if (type === \"date\" || type === \"datetime-local\")\n      //   // value = Date.parse(value);\n      //   value = value;\n      // else\n      if (type === \"checkbox\") value = checked ? \"1\" : \"0\";\n      if (fieldIndex >= 0) {\n        state.items[fieldIndex].field.value = String(value);\n      }\n    },\n    updateEntryValues(state, action) {\n      state.items = action.payload;\n    },\n    addNewEntryLink(state, action) {\n      const {\n        parentColumnUUID,\n        rowUUID,\n        fe_title,\n        newUUID,\n        libUUID,\n        sqlTableName,\n        columnParentName,\n      } = action.payload;\n      const link = {\n        rowUUID,\n        columnUUID: parentColumnUUID,\n        rowTitle: fe_title,\n        libUUID,\n        tableName: sqlTableName,\n        columnParentName,\n      };\n      console.log(\"linkENtry: \", link, \"newUUID:\", newUUID);\n      const fieldIndex = state.items.findIndex((field) => {\n        return field.field.columnUUID === parentColumnUUID;\n      });\n      if (fieldIndex >= 0) {\n        if (state.items[fieldIndex].field?.entryLinks?.length > 0) {\n          console.log(\"fieldIndex\", fieldIndex, \"newUUID\", newUUID);\n          if (!state.items[fieldIndex]?.field?.value?.value)\n            state.items[fieldIndex].field.value.value = newUUID;\n          state.items[fieldIndex].field?.entryLinks?.push(link);\n        } else {\n          console.log(\"newUUID\", newUUID);\n          const entryLinks = [];\n          entryLinks.push(link);\n          // if (!state.items[fieldIndex]?.field?.value?.value)\n          state.items[fieldIndex].field.value.value = newUUID;\n          state.items[fieldIndex].field.entryLinks = entryLinks;\n        }\n      }\n    },\n\n    deleteEntryLink(state, action) {\n      const { columnUUID, entryIndex } = action.payload;\n\n      const fieldIndex = state.items.findIndex((field) => {\n        return field.field.columnUUID === columnUUID;\n      });\n      if (fieldIndex >= 0 && entryIndex >= 0)\n        state.items[fieldIndex].field?.entryLinks?.splice(entryIndex, 1);\n    },\n  },\n});\n\nexport const {\n  updateFieldValue,\n  updateEntryValues,\n  addNewEntryLink,\n  deleteEntryLink,\n  clearState,\n} = editedEntrySlice.actions;\n\nexport default editedEntrySlice.reducer;\n\nexport const selectAllFields = (state) => state.editedEntry?.items;\n\nexport const selectFieldByName = (state, fieldName) =>\n  state.editedEntry?.items.find(\n    (field) => field.name.toLowerCase() === fieldName.toLowerCase()\n  );\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = [];\n\nexport const librariesDataSlice = createSlice({\n  name: \"librariesDataSlice\",\n  initialState,\n  reducers: {\n    updateAllLibrariesDataFromStorage(state, action) {\n      action.payload?.forEach((lib) => {\n        state.push(lib);\n      });\n    },\n    updateAllLibrariesData(state, action) {\n      action.payload?.forEach((lib) => {\n        const rowsData = [];\n        lib.rows.forEach((row) => {\n          const columnsFromJSON = JSON.parse(row.rowJSON);\n          rowsData.push({\n            rowUUID: row.rowUUID,\n            fe_title: row.fe_title,\n            fe_description: row.fe_description,\n            ...columnsFromJSON,\n          });\n        });\n\n        const libTemp = {\n          name: lib.name,\n          libUUID: lib.libUUID,\n          rows: rowsData,\n        };\n\n        state.push(libTemp);\n      });\n      // action.payload.map((lib) => state.push(lib));\n    },\n    addNewLibraryData(state, action) {\n      const { libUUID, name } = action.payload;\n\n      const lib = {\n        name: name,\n        libUUID: libUUID,\n        rows: [],\n      };\n      state.push(lib);\n    },\n    updateLibraryRecord(state, action) {\n      const { libUUID, rowUUID, editedFields } = action.payload;\n      console.log(\"editedFields\", editedFields);\n      const libIndex = state.findIndex((lib) => lib.libUUID === libUUID);\n      console.log(\"libIndex\", libIndex);\n      const rowIndex = state[libIndex].rows.findIndex(\n        (row) => row.rowUUID === rowUUID\n      );\n      console.log(\"updateStart:\", rowIndex);\n      editedFields.forEach((col) => {\n        const sqlFieldName = col.columnTemplate.sqlFieldName;\n        if (sqlFieldName) {\n          if (col.columnTemplate.type === \"libEntry\") {\n            // console.log(\n            //   \"state[libIndex].rows[rowIndex][sqlFieldName]\",\n            //   state[libIndex].rows[rowIndex][sqlFieldName],\n            //   sqlFieldName\n            // );\n            state[libIndex].rows[rowIndex][sqlFieldName].value =\n              col.field?.value?.value;\n            state[libIndex].rows[rowIndex][sqlFieldName].entrylinks =\n              col.field?.entryLinks;\n          } else state[libIndex].rows[rowIndex][sqlFieldName] = col.field.value;\n        }\n      });\n      console.log(\"UpdateEnds:\", state[libIndex].rows[rowIndex]);\n    },\n    addNewLibraryRecord(state, action) {\n      const { libUUID, rowUUID, editedFields, name } = action.payload;\n      console.log(\"editedFields\", editedFields);\n      let libIndex = state.findIndex((lib) => lib.libUUID === libUUID);\n      if (libIndex < 0) {\n        state.push({\n          name: name,\n          libUUID: libUUID,\n          rows: [],\n        });\n        libIndex = state.findIndex((lib) => lib.libUUID === libUUID);\n        console.log(\"No library found while adding new record\");\n      }\n\n      console.log(\"libIndex\", libIndex);\n      const newRow = {};\n      const titleColumnsValues = [];\n      const descriptionColumnsValues = [];\n      editedFields.forEach((col) => {\n        const sqlFieldName = col.columnTemplate.sqlFieldName;\n        if (sqlFieldName) {\n          newRow[sqlFieldName] = {};\n\n          if (col.columnTemplate.type === \"libEntry\") {\n            newRow[sqlFieldName].value = col.field?.value?.value;\n            newRow[sqlFieldName].entrylinks = col.field?.entryLinks;\n\n            if (col.columnTemplate.usage === \"title\")\n              col.field.entryLinks.forEach((link) =>\n                titleColumnsValues.push(link.rowTitle)\n              );\n            if (col.columnTemplate.usage === \"description\")\n              col.field.entryLinks.forEach((link) =>\n                descriptionColumnsValues.push(link.rowTitle)\n              );\n          } else {\n            newRow[sqlFieldName] = col.field.value;\n            if (col.columnTemplate.usage === \"title\")\n              titleColumnsValues.push(col.field.value);\n            if (col.columnTemplate.usage === \"description\")\n              descriptionColumnsValues.push(col.field.value);\n          }\n        }\n      });\n      newRow.rowUUID = rowUUID;\n      newRow.fe_title = titleColumnsValues.join(\" \");\n      newRow.fe_description = descriptionColumnsValues.join(\" \");\n      state[libIndex].rows.push(newRow);\n    },\n\n    deleteLibraryData(state, action) {\n      const { libUUID } = action.payload;\n      let libIndex = state.findIndex((lib) => lib.libUUID === libUUID);\n      if (libIndex > -1) state.splice(libIndex, 1);\n    },\n\n    deleteRowData(state, action) {\n      const { libUUID, rowUUID } = action.payload;\n      console.log(\"libUUID, rowUUID \", libUUID, rowUUID);\n      let libIndex = state.findIndex((lib) => lib.libUUID === libUUID);\n      if (libIndex > -1) {\n        console.log(\"libIndex \", libIndex);\n        let rowIndex = state[libIndex].rows.findIndex(\n          (row) => row.rowUUID === rowUUID\n        );\n        if (rowIndex > -1) state[libIndex].rows.splice(rowIndex, 1);\n      }\n    },\n  },\n});\n\nexport const {\n  updateAllLibrariesData,\n  addNewLibraryData,\n  updateLibraryRecord,\n  addNewLibraryRecord,\n  updateAllLibrariesDataFromStorage,\n  deleteLibraryData,\n  deleteRowData,\n} = librariesDataSlice.actions;\n\nexport default librariesDataSlice.reducer;\n\nexport const selectAllDataLibrary = (state) => state?.librariesData;\n\nexport const getLibDataByLibraryId = (state, libUUID) => {\n  return state.librariesData?.find((lib) => lib.libUUID === libUUID);\n};\n\nexport const getRowDataById = (state, { rowUUID, libUUID }) => {\n  if (!rowUUID || !libUUID) return null;\n  return state.librariesData\n    ?.find((lib) => lib.libUUID === libUUID)\n    ?.rows.find((row) => row.rowUUID === rowUUID);\n};\n\nexport const getRowsDataByIds = (state, { libUUID, listRowsUUID }) => {\n  const lib = state.librariesData.find((lib) => lib.libUUID === libUUID);\n  return lib?.rows.filter((row) => listRowsUUID.includes(row.rowUUID));\n};\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = [];\n\nexport const librariesTemplateSlice = createSlice({\n  name: \"librariesTemplate\",\n  initialState,\n  reducers: {\n    updateAllLibraries(state, action) {\n      action.payload?.map((lib) => state.push(lib));\n    },\n    addNewLibraryTemplate(state, action) {\n      const libUUID = action.payload.libUUID;\n      console.log(\"libUUID in addNewLibraryTemplate\", libUUID);\n\n      let templateLibIdx = state.findIndex((lib) => lib.libUUID === libUUID);\n      if (templateLibIdx >= 0) {\n        console.log(\"found templateLib\", action.payload);\n        state[templateLibIdx] = action.payload;\n      } else {\n        console.log(\"not found template lib\");\n        state.push(action.payload);\n      }\n    },\n    deleteLibraryTemplate(state, action) {\n      const { libUUID } = action.payload;\n      let libIndex = state.findIndex((lib) => lib.libUUID === libUUID);\n      state.splice(libIndex, 1);\n    },\n  },\n});\n\nexport const {\n  updateAllLibraries,\n  addNewLibraryTemplate,\n  deleteLibraryTemplate,\n} = librariesTemplateSlice.actions;\n\nexport default librariesTemplateSlice.reducer;\n\nexport const selectAllLibraries = (state) => state.librariesTemplate;\nexport const selectLibraryById = (state, uuid) =>\n  state.librariesTemplate?.find((lib) => lib.libUUID === uuid);\nexport const selectLibrariesInfo = (state) => {\n  return state.librariesTemplate.map((lib) => {\n    return {\n      libUUID: lib.libUUID,\n      name: lib.name,\n      sqlTableName: lib.sqlTableName,\n    };\n  });\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"TemplateLibraryCreator_main__3Zjq5\",\"goBack\":\"TemplateLibraryCreator_goBack__13EA7\",\"header\":\"TemplateLibraryCreator_header__3uiit\",\"mainOptions\":\"TemplateLibraryCreator_mainOptions__1Ihk_\",\"tab\":\"TemplateLibraryCreator_tab__rTDK9\",\"tabButton\":\"TemplateLibraryCreator_tabButton__3_S2w\",\"active\":\"TemplateLibraryCreator_active__3oLlr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"TemplateFieldCreator_modal__2LBeV\",\"header\":\"TemplateFieldCreator_header__2c5ZU\",\"form\":\"TemplateFieldCreator_form__WrC7n\",\"backdrop\":\"TemplateFieldCreator_backdrop__UE-c2\",\"container\":\"TemplateFieldCreator_container__1oYxx\",\"type\":\"TemplateFieldCreator_type__2hAG4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"SelectField_modal__1uSDM\",\"backdrop\":\"SelectField_backdrop__1-YyJ\",\"header\":\"SelectField_header__h5m7Z\",\"ul\":\"SelectField_ul__2VuWy\",\"list\":\"SelectField_list__GapW0\"};"],"sourceRoot":""}